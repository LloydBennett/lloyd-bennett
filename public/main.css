/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/*
 NORMALIZE
 ==========================================================================*/
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
  color: inherit;
  text-decoration: none;
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

a:visited {
  color: inherit;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button; /* 2 */
  -moz-appearance: button; /* 2 */
  appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  -moz-appearance: textfield; /* 2 */
  appearance: textfield;
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

* {
  box-sizing: border-box;
}

input, textarea {
  background: none;
}
input:focus, input:active, textarea:focus, textarea:active {
  outline: none;
}
input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:active, input:-webkit-autofill:focus, textarea:-webkit-autofill, textarea:-webkit-autofill:hover, textarea:-webkit-autofill:active, textarea:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px grey inset;
}

section {
  counter-reset: number-counter;
}

ul {
  padding-left: 0;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 30px #202020 inset !important;
  -webkit-text-fill-color: white !important;
}

input,
textarea {
  padding: 0;
}

/* Colours */
/* Type */
/* Spacing */
/* Breakpoints */
/* Animation Easing */
/* Border */
@keyframes link-hover {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(100%);
  }
  50.01% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes link-hover--inverted {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-100%);
  }
  50.01% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
/* Typography */
html {
  font-size: 62.5%;
}
@media screen and (min-width: 2000px) {
  html {
    font-size: 0.5vw;
  }
}

body {
  font-family: "freight-text-pro", serif;
  font-size: 100%;
}

.type--xl,
.type--l,
.nav-menu__link,
.type--m,
.type--s {
  font-family: "freight-display-pro", serif;
  font-weight: 700;
}

.type--xl {
  font-size: 6rem;
  line-height: 1.1;
}
@media screen and (min-width: 450px) {
  .type--xl {
    font-size: 7.6rem;
  }
}
@media screen and (min-width: 550px) {
  .type--xl {
    font-size: 9.6rem;
    line-height: 1;
  }
}
@media screen and (min-width: 768px) {
  .type--xl {
    font-size: 11.8rem;
  }
}
@media screen and (min-width: 1470px) {
  .type--xl {
    font-size: 14.9rem;
  }
}
@media screen and (min-width: 2000px) {
  .type--xl {
    font-size: 18rem;
  }
}

.type--l, .nav-menu__link {
  font-size: 4.8rem;
  line-height: 1.1;
}
@media screen and (min-width: 550px) {
  .type--l, .nav-menu__link {
    font-size: 6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--l, .nav-menu__link {
    font-size: 7.6rem;
  }
}

.type--m {
  font-size: 3.9rem;
  line-height: 1.3;
}
@media screen and (min-width: 768px) {
  .type--m {
    font-size: 6rem;
    line-height: 1.1;
  }
}

.type--s {
  font-size: 2.5rem;
  line-height: 1.3;
}
@media screen and (min-width: 768px) {
  .type--s {
    font-size: 3.9rem;
    line-height: 1.2;
  }
}

.type--body {
  font-size: 1.6rem;
  line-height: 1.5;
  margin: 0;
}
@media screen and (min-width: 768px) {
  .type--body {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--body {
    font-size: 2rem;
  }
}
.type--body + .type--body {
  margin-top: 2.4rem;
}

.type--alt-l {
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-size: 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--alt-l {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--alt-l {
    font-size: 2rem;
  }
}

.type--alt-s {
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-size: 1.2rem;
}
@media screen and (min-width: 1600px) {
  .type--alt-s {
    font-size: 1.4rem;
  }
}

.type--l-margin {
  margin: 0 0 4rem;
}
@media screen and (min-width: 550px) {
  .type--l-margin {
    margin: 0 0 5.6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--l-margin {
    margin: 0 0 7.2rem;
  }
}

.type--m-margin {
  margin: 0 0 3.2rem;
}
@media screen and (min-width: 768px) {
  .type--m-margin {
    margin: 0 0 4rem;
  }
}

.type--s-margin {
  margin: 0 0 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--s-margin {
    margin: 0 0 2.4rem;
  }
}

.type--body-color {
  color: #464646;
}

.type--white {
  color: white;
}

.block, .no-wrap--and-break, .block--full-width {
  display: block;
}

.block--full-width {
  width: 100%;
}

.flex {
  display: flex;
}

.inline-block {
  display: inline-block;
}

.no-margin {
  margin: 0;
}

.no-margin--bottom {
  margin-bottom: 0;
}

.no-margin--top {
  margin-top: 0;
}

.no-wrap, .no-wrap--and-break {
  white-space: nowrap;
}

.no-wrap--and-break {
  line-height: 1;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.container {
  margin-right: auto;
  margin-left: auto;
  width: 90%;
}

@media screen and (min-width: 550px) {
  .grid {
    display: grid;
  }
}
@media screen and (min-width: 550px) {
  .grid {
    grid-column-gap: 2.4rem;
    grid-template-columns: repeat(6, 1fr);
  }
}
@media screen and (min-width: 1200px) {
  .grid {
    grid-column-gap: 3.2rem;
    grid-template-columns: repeat(10, 1fr);
  }
}

@media screen and (min-width: 550px) {
  .offset-content {
    grid-column: 3/7;
  }
}
@media screen and (min-width: 1200px) {
  .offset-content {
    grid-column: 6/11;
  }
}

.column {
  grid-column: 1/7;
}

@media screen and (min-width: 768px) {
  .column--half-start {
    grid-column: 1/4;
  }
}
@media screen and (min-width: 1200px) {
  .column--half-start {
    grid-column: 1/6;
  }
}

@media screen and (min-width: 768px) {
  .column--half-end {
    grid-column: 4/7;
  }
}
@media screen and (min-width: 1200px) {
  .column--half-end {
    grid-column: 6/11;
  }
}

.section--l {
  margin-bottom: 8rem;
}
@media screen and (min-width: 768px) {
  .section--l {
    margin-bottom: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--l {
    margin-bottom: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .section--l {
    margin-bottom: 22.4rem;
  }
}

.section--s {
  margin-bottom: 4.8rem;
}
@media screen and (min-width: 550px) {
  .section--s {
    margin-bottom: 6.4rem;
  }
}
@media screen and (min-width: 768px) {
  .section--s {
    margin-bottom: 8rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--s {
    margin-bottom: 10.4rem;
  }
}

.button {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-weight: 600;
  letter-spacing: 1px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  display: inline-block;
  font-family: "freight-sans-pro", sans-serif;
  overflow: hidden;
  padding: 0;
  position: relative;
}
@media screen and (min-width: 768px) {
  .button {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .button {
    font-size: 2rem;
  }
}
.button:hover .button__text {
  color: #f56308;
  transition: color 500ms ease;
}
.button:hover .button__line {
  animation: link-hover 600ms ease 0s 1 forwards;
  transition: 500ms ease 100ms;
  background-color: #f56308;
}

.button--main .button__text {
  color: black;
}
.button--main .button__line {
  background-color: black;
}

.button--inverted .button__text {
  color: white;
}
.button--inverted .button__line {
  background-color: white;
}

.button__text {
  display: block;
  transition: color 500ms ease;
}

.button__line {
  display: block;
  height: 0.2rem;
  width: 100%;
  margin-top: 0.4rem;
  transition: transform 500ms ease;
}

.button--margin-top {
  margin-top: 4.8rem;
}

.link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: bottom;
}
.link::after {
  content: "";
  background-color: #4e4e53;
  bottom: 3px;
  display: block;
  height: 0.1rem;
  left: 0;
  position: absolute;
  transition: 600ms ease;
  width: 100%;
}
.link:hover::after {
  animation: link-hover 600ms ease 0s 1 forwards;
}

.link--dark {
  color: #CAC9C9;
}
.link--dark::after {
  background-color: #CAC9C9;
}
.link--dark:visited {
  color: #CAC9C9;
}

.hero__project {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 2.4rem;
  margin-top: 8rem;
}
@media screen and (min-width: 550px) {
  .hero__project {
    grid-column-gap: 2.4rem;
    grid-template-columns: repeat(6, 1fr);
  }
}
@media screen and (min-width: 1200px) {
  .hero__project {
    grid-column-gap: 3.2rem;
    grid-template-columns: repeat(10, 1fr);
  }
}
@media screen and (min-width: 768px) {
  .hero__project {
    margin-top: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .hero__project {
    margin-top: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .hero__project {
    margin-top: 22.4rem;
  }
}

@media screen and (max-width: 767px) {
  .hero__project-no span,
  .hero__project-title {
    font-size: 5rem;
  }
}

.hero__project-title {
  grid-column: 2/5;
}
@media screen and (min-width: 550px) {
  .hero__project-title {
    grid-column: 3/7;
  }
}
@media screen and (min-width: 1200px) {
  .hero__project-title {
    grid-column: 6/11;
  }
}
@media screen and (max-width: 549px) {
  .hero__project-title {
    text-align: right;
  }
}

.hero__project-no {
  grid-column: 1/2;
}
@media screen and (min-width: 550px) {
  .hero__project-no {
    grid-column: 1/3;
  }
}

.nav-menu {
  width: 100%;
  height: 100%;
  background-color: #202020;
  position: fixed;
  left: 0;
  top: 0;
}

.nav-menu__list {
  margin: 12rem auto 0;
  display: table;
}

.nav-menu__list-item {
  padding: 3.2rem 0;
}

.nav-menu__link {
  display: block;
}
@media screen and (min-width: 960px) {
  .nav-menu__link {
    font-size: 12.8rem;
  }
}

.nav-menu__list:hover > .nav-menu__list-item span:not(:hover) {
  color: red;
}

.nav-bar {
  padding: 1.6rem 0;
}

.nav-bar__meta-one,
.nav-bar__meta-two {
  display: none;
}
@media screen and (min-width: 768px) {
  .nav-bar__meta-one,
  .nav-bar__meta-two {
    display: block;
  }
}

@media screen and (min-width: 768px) {
  .nav-bar__meta-one {
    grid-column: 3/5;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__meta-one {
    grid-column: 4/6;
  }
}

@media screen and (min-width: 768px) {
  .nav-bar__meta-two {
    grid-column: 5/6;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__meta-two {
    grid-column: 6/8;
  }
}

.nav-bar__trigger {
  display: flex;
  align-items: center;
  justify-content: right;
}
@media screen and (min-width: 550px) {
  .nav-bar__trigger {
    grid-column: 6/7;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__trigger {
    grid-column: 10/11;
  }
}

.hamburger {
  display: inline-block;
  cursor: pointer;
  width: 2.4rem;
}

.hamburger__line {
  display: block;
  height: 3px;
  background-color: #202020;
}
.hamburger__line + .hamburger__line {
  margin-top: 0.4rem;
}
@media screen and (min-width: 1200px) {
  .hamburger__line + .hamburger__line {
    margin-top: 0.8rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7OzRFQUFBO0FBSUM7RUFDRztFQUNBO0VBQ0E7QUNBSjs7QURHRTs7RUFBQTtBQUlBO0VBQ0U7QUNESjs7QURJRTsrRUFBQTtBQUdBOzs7O0VBQUE7QUFNQTs7Ozs7Ozs7Ozs7VUFXVTtFQUNSO0FDSEo7O0FETUU7O0VBQUE7QUFJQTs7OztFQUlFO0FDSko7O0FET0U7O0VBQUE7QUFJQTtFQUNFO0VBQ0E7QUNMSjs7QURRRTs7RUFBQTtBQUlBO0VBQ0U7QUNOSjs7QURTRTs7O0VBQUE7QUFLQTs7RUFFRTtBQ1BKOztBRFVFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBQ1RKOztBRGFFOzs7RUFBQTtBQUtBOztFQUVFO0FDWEo7O0FEY0U7RUFDSTtBQ1hOOztBRGVFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0VBQ0E7QUNkSjs7QURpQkU7O0VBQUE7QUFJQTs7RUFFRTtBQ2ZKOztBRGtCRTs7RUFBQTtBQUlBOztFQUVFO0FDaEJKOztBRG1CRTs7RUFBQTtBQUlBO0VBQ0U7QUNqQko7O0FEb0JFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtBQ2xCSjs7QURxQkU7O0VBQUE7QUFJQTtFQUNFO0VBQ0E7QUNuQko7O0FEc0JFOztFQUFBO0FBSUE7RUFDRTtBQ3BCSjs7QUR1QkU7OztFQUFBO0FBS0E7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7QUNyQko7O0FEd0JFO0VBQ0U7QUNyQko7O0FEd0JFO0VBQ0U7QUNyQko7O0FEd0JFOytFQUFBO0FBR0E7O0VBQUE7QUFJQTtFQUNFO0FDdkJKOztBRDBCRTs7RUFBQTtBQUlBO0VBQ0U7QUN4Qko7O0FEMkJFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7Ozs7RUFJRTtFQUNBO0FDMUJKOztBRDZCRTs7RUFBQTtBQUlBO0VBQ0U7QUMzQko7O0FEOEJFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtFQUNBO0FDNUJKOztBRCtCRTsrRUFBQTtBQUdBOzs7RUFBQTtBQUtBOzs7O0VBSUU7RUFDQTtBQzlCSjs7QURpQ0U7O0VBQUE7QUFJQTtFQUNFO0FDL0JKOztBRGtDRTs7O0VBQUE7QUFLQTtRQUNRO0VBQ047QUNoQ0o7O0FEbUNFOzs7RUFBQTtBQUtBO1NBQ1M7RUFDUDtBQ2pDSjs7QURvQ0U7Ozs7RUFBQTtBQU1BOzs7O0VBSUU7RUFDQTtFQUNBO0FDbENKOztBRHFDRTs7RUFBQTtBQUlBOzs7O0VBSUU7RUFDQTtBQ25DSjs7QURzQ0U7O0VBQUE7QUFJQTs7OztFQUlFO0FDcENKOztBRHVDRTs7RUFBQTtBQUlBO0VBQ0U7RUFDQTtFQUNBO0FDckNKOztBRHdDRTs7Ozs7RUFBQTtBQU9BO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDdENKOztBRHlDRTs7RUFBQTtBQUlBO0VBQ0U7QUN2Q0o7O0FEMENFOzs7RUFBQTtBQUtBOztFQUVFO0VBQ0E7QUN4Q0o7O0FEMkNFOztFQUFBO0FBSUE7O0VBRUU7QUN6Q0o7O0FENENFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUMxQ0o7O0FENkNFOztFQUFBO0FBSUE7O0VBRUU7QUMzQ0o7O0FEOENFOztFQUFBO0FBSUE7RUFDRTtFQUNBO0FDNUNKOztBRCtDRTs7O0VBQUE7QUFLQTtFQUNFO0VBQ0E7QUM3Q0o7O0FEaURFO0VBQ0k7QUM5Q047O0FEaURFO0VBQ0U7QUM5Q0o7QURnREk7RUFFRTtBQy9DTjtBRGtESTtFQUVFO0FDakROOztBRHNERTtFQUNFO0FDbkRKOztBRHNERTtFQUNFO0FDbkRKOztBRHNERTs7Ozs7Ozs7O0VBU0U7RUFDQTtBQ25ESjs7QURzREU7O0VBRUU7QUNuREo7O0FDcmFBO0FBVUE7QUFVQTtBQUlBO0FBU0E7QUFHQTtBQ3BDQTtFQUNFO0lBQ0U7RUY4YUY7RUUzYUE7SUFDRTtFRjZhRjtFRTFhQTtJQUNFO0VGNGFGO0VFemFBO0lBQ0U7RUYyYUY7QUFDRjtBRXhhQTtFQUNFO0lBQ0U7RUYwYUY7RUV2YUE7SUFDRTtFRnlhRjtFRXRhQTtJQUNFO0VGd2FGO0VFcmFBO0lBQ0U7RUZ1YUY7QUFDRjtBR3hjQTtBQUdBO0VBQ0M7QUh3Y0Q7QUkxY0U7RURDRjtJQUlFO0VIeWNBO0FBQ0Y7O0FHdGNBO0VBQ0Msc0NGQ21CO0VFQW5CO0FIeWNEOztBR3RjQTs7Ozs7RUFJQyx5Q0ZSc0I7RUVTdEI7QUgwY0Q7O0FHdmNBO0VBQ0M7RUFDQTtBSDBjRDtBSWxlRTtFRHNCRjtJQUtFO0VIMmNBO0FBQ0Y7QUl2ZUU7RURzQkY7SUFTRTtJQUNBO0VINGNBO0FBQ0Y7QUk3ZUU7RURzQkY7SUFjRTtFSDZjQTtBQUNGO0FJbGZFO0VEc0JGO0lBa0JFO0VIOGNBO0FBQ0Y7QUl2ZkU7RURzQkY7SUFzQkU7RUgrY0E7QUFDRjs7QUc1Y0E7RUFDQztFQUNBO0FIK2NEO0FJamdCRTtFRGdERjtJQUtFO0VIZ2RBO0FBQ0Y7QUl0Z0JFO0VEZ0RGO0lBU0U7RUhpZEE7QUFDRjs7QUc5Y0E7RUFDQztFQUNBO0FIaWREO0FJaGhCRTtFRDZERjtJQUtFO0lBQ0E7RUhrZEE7QUFDRjs7QUcvY0E7RUFDQztFQUNBO0FIa2REO0FJM2hCRTtFRHVFRjtJQUtFO0lBQ0E7RUhtZEE7QUFDRjs7QUdoZEE7RUVsRkM7RUZvRkEsZ0JGMUVtQjtFRTJFbkI7QUhtZEQ7QUl2aUJFO0VEaUZGO0lFOUVHO0VMd2lCRDtBQUNGO0FJNWlCRTtFRGlGRjtJRXhFRztFTHVpQkQ7QUFDRjtBRzNkQztFQUNDO0FINmRGOztBR3pkQTtFRzVGRTtFQUdFLDJDTFVlO0VJYmxCO0FMMmpCRDtBSTFqQkU7RUQyRkY7SUV4Rkc7RUwyakJEO0FBQ0Y7QUkvakJFO0VEMkZGO0lFbEZHO0VMMGpCRDtBQUNGOztBR3BlQTtFR2pHRTtFQUdFLDJDTFVlO0VJYmxCO0FMMmtCRDtBSTFrQkU7RURnR0Y7SUV2Rkc7RUxxa0JEO0FBQ0Y7O0FHMWVBO0VBQ0M7QUg2ZUQ7QUlubEJFO0VEcUdGO0lBSUU7RUg4ZUE7QUFDRjtBSXhsQkU7RURxR0Y7SUFRRTtFSCtlQTtBQUNGOztBRzVlQTtFQUNDO0FIK2VEO0FJam1CRTtFRGlIRjtJQUlFO0VIZ2ZBO0FBQ0Y7O0FHN2VBO0VBQ0M7QUhnZkQ7QUkxbUJFO0VEeUhGO0lBSUU7RUhpZkE7QUFDRjs7QUc5ZUE7RUFDQyxjRjdIbUI7QUQ4bUJwQjs7QUc5ZUE7RUFDQyxZRnBJZTtBRHFuQmhCOztBT3puQkE7RUFDRTtBUDRuQkY7O0FPem5CQTtFQUVFO0FQMm5CRjs7QU94bkJBO0VBQ0U7QVAybkJGOztBT3huQkE7RUFDRTtBUDJuQkY7O0FRem9CQTtFQUNFO0FSNG9CRjs7QVF6b0JBO0VBQ0U7QVI0b0JGOztBUXpvQkE7RUFDRTtBUjRvQkY7O0FTcnBCQTtFQUNFO0FUd3BCRjs7QVNycEJBO0VBR0U7QVRzcEJGOztBVTdwQkE7RUFDRTtBVmdxQkY7O0FVN3BCQTtFQUNFO0FWZ3FCRjs7QVU3cEJBO0VBQ0U7QVZncUJGOztBV3pxQkE7RUNDQztFQUNBO0VBQ0E7QVo0cUJEOztBSTdxQkU7RVNGRjtJQ1NJO0VkMnFCRjtBQUNGO0FJbnJCRTtFU0ZGO0lDb0JFO0lBQ0E7RWRxcUJBO0FBQ0Y7QUl6ckJFO0VTRkY7SUN5QkU7SUFDQTtFZHNxQkE7QUFDRjs7QUkvckJFO0VXRkY7SUNFRTtFaEJvc0JBO0FBQ0Y7QUlyc0JFO0VXRkY7SUNNRTtFaEJxc0JBO0FBQ0Y7O0FpQjVzQkE7RUFDQztBakIrc0JEOztBSTlzQkU7RWFFRjtJQUVFO0VqQitzQkE7QUFDRjtBSXB0QkU7RWFFRjtJQU1FO0VqQmd0QkE7QUFDRjs7QUl6dEJFO0VhWUY7SUFFRTtFakJndEJBO0FBQ0Y7QUkvdEJFO0VhWUY7SUFNRTtFakJpdEJBO0FBQ0Y7O0FrQnR1QkE7RUNDQztBbkJ5dUJEO0FJeHVCRTtFY0ZGO0lDSUU7RW5CMHVCQTtBQUNGO0FJN3VCRTtFY0ZGO0lDUUU7RW5CMnVCQTtBQUNGO0FJbHZCRTtFY0ZGO0lDWUU7RW5CNHVCQTtBQUNGOztBa0JydkJBO0VFSEU7QXBCNHZCRjtBSTN2QkU7RWNFRjtJRUFJO0VwQjZ2QkY7QUFDRjtBSWh3QkU7RWNFRjtJRUlJO0VwQjh2QkY7QUFDRjtBSXJ3QkU7RWNFRjtJRVFJO0VwQit2QkY7QUFDRjs7QXFCNXdCQTtFaEJDQztFQ0FDO0VBR0UsMkNMVWU7RUtOZixnQkxTcUI7RUtMckI7RWdCWEY7RUFDQTtFQUNBO0VBQ0E7RUFDQSwyQ3JCU2lCO0VxQlJqQjtFQUNBO0VBQ0E7QXRCb3hCRjtBSTF4QkU7RWlCRkY7SWhCS0c7RUwyeEJEO0FBQ0Y7QUkveEJFO0VpQkZGO0loQldHO0VMMHhCRDtBQUNGO0FxQmh5Qkk7RUFDRSxjcEJOWTtFb0JPWjtBckJreUJOO0FxQi94Qkk7RUFDRTtFQUNBO0VBQ0EseUJwQmJZO0FEOHlCbEI7O0FxQjN4QkU7RUFDRSxZcEJoQlk7QUQ4eUJoQjtBcUIzeEJFO0VBQ0UsdUJwQnBCWTtBRGl6QmhCOztBcUJ4eEJFO0VBQ0UsWXBCM0JZO0FEc3pCaEI7QXFCeHhCRTtFQUNFLHVCcEIvQlk7QUR5ekJoQjs7QXFCdHhCQTtFQUNFO0VBQ0E7QXJCeXhCRjs7QXFCdHhCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QXJCeXhCRjs7QXFCdHhCQTtFQUNFO0FyQnl4QkY7O0F1QjkwQkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBdkJpMUJGO0F1Qi8wQkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QXZCaTFCSjtBdUI3MEJJO0VBQ0U7QXZCKzBCTjs7QXVCMTBCQTtFQUNFLGN0QnBCcUI7QURpMkJ2QjtBdUIzMEJFO0VBQ0UseUJ0QnZCbUI7QURvMkJ2QjtBdUIxMEJFO0VBQ0UsY3RCM0JtQjtBRHUyQnZCOztBd0I3MkJBO0VWR0c7RUFDQTtFQUNBO0VLSkY7QW5CbTNCRDtBSWwzQkU7RW9CRkY7SVZvQkU7SUFDQTtFZG8yQkE7QUFDRjtBSXgzQkU7RW9CRkY7SVZ5QkU7SUFDQTtFZHEyQkE7QUFDRjtBSTkzQkU7RW9CRkY7SUxJRTtFbkJnNEJBO0FBQ0Y7QUluNEJFO0VvQkZGO0lMUUU7RW5CaTRCQTtBQUNGO0FJeDRCRTtFb0JGRjtJTFlFO0VuQms0QkE7QUFDRjs7QUl6NEJFO0VvQkRGOztJQUdJO0V4QjY0QkY7QUFDRjs7QXdCMTRCQTtFQUVFO0F4QjQ0QkY7QUl4NUJFO0VvQlVGO0lSVkU7RWhCNDVCQTtBQUNGO0FJNzVCRTtFb0JVRjtJUk5FO0VoQjY1QkE7QUFDRjtBSTk1QkU7RW9CTUY7SUFLSTtFeEJ1NUJGO0FBQ0Y7O0F3QnA1QkE7RUFDRTtBeEJ1NUJGO0FJMzZCRTtFb0JtQkY7SUFJSTtFeEJ3NUJGO0FBQ0Y7O0F5Qmw3QkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QXpCcTdCRjs7QXlCbDdCQTtFQUNFO0VBQ0E7QXpCcTdCRjs7QXlCbDdCQTtFQUNFO0F6QnE3QkY7O0F5Qmw3QkE7RUFFRTtBekJvN0JGO0FJdDhCRTtFcUJnQkY7SUFLRTtFekJxN0JBO0FBQ0Y7O0F5Qmw3QkE7RUFDRTtBekJxN0JGOztBMEJqOUJBO0VBQ0U7QTFCbzlCRjs7QTBCajlCQTs7RUFFRTtBMUJvOUJGO0FJeDlCRTtFc0JFRjs7SUFLSTtFMUJzOUJGO0FBQ0Y7O0FJOTlCRTtFc0JXRjtJQUVJO0UxQnM5QkY7QUFDRjtBSXArQkU7RXNCV0Y7SUFNSTtFMUJ1OUJGO0FBQ0Y7O0FJeitCRTtFc0JxQkY7SUFFSTtFMUJ1OUJGO0FBQ0Y7QUkvK0JFO0VzQnFCRjtJQU1JO0UxQnc5QkY7QUFDRjs7QTBCcjlCQTtFQUNFO0VBQ0E7RUFDQTtBMUJ3OUJGO0FJMS9CRTtFc0IrQkY7SUFNSTtFMUJ5OUJGO0FBQ0Y7QUkvL0JFO0VzQitCRjtJQVVJO0UxQjA5QkY7QUFDRjs7QTJCdGdDQTtFQUNFO0VBQ0E7RUFDQTtBM0J5Z0NGOztBMkJ0Z0NBO0VBQ0U7RUFDQTtFQUNBLHlCMUJOYTtBRCtnQ2Y7QTJCdmdDRTtFQUNFLGtCMUJVZ0I7QUQrL0JwQjtBSW5oQ0U7RXVCU0E7SUFJSSxrQjFCTVM7RURvZ0NiO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvYmFzZS9yZXNldC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3NldHRpbmdzL3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvYW5pbWF0aW9ucy9saW5rLWhvdmVyLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9iYXNlL3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9tZWRpYS1xdWVyeS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL3RleHQtc2l6ZS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL2NhcHRpYWxpc2VkLXRleHQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2hlbHBlcnMvZGlzcGxheS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaGVscGVycy9uby1tYXJnaW4uc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2hlbHBlcnMvbm8td3JhcC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaGVscGVycy90ZXh0LWFsaWdubWVudC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2NvbnRhaW5lci5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL2NvbnRhaW5lci5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2dyaWQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9ncmlkLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9sYXlvdXQvb2Zmc2V0LWNvbnRlbnQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9vZmZzZXQtY29udGVudC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2NvbHVtbnMuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvc2VjdGlvbi5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL3NlY3Rpb24tbGFyZ2Uuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9zZWN0aW9uLXNtYWxsLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL2J1dHRvbi5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL2J1dHRvbi5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9saW5rLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL2hlcm8uc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvbmF2LW1lbnUuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvbmF2LWJhci5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9oYW1idXJnZXIuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuIE5PUk1BTElaRVxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuIGh0bWwge1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgKi9cbiAgXG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICBcbiAgLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgKi9cbiAgXG4gIGFydGljbGUsXG4gIGFzaWRlLFxuICBkZXRhaWxzLCAvKiAxICovXG4gIGZpZ2NhcHRpb24sXG4gIGZpZ3VyZSxcbiAgZm9vdGVyLFxuICBoZWFkZXIsXG4gIG1haW4sIC8qIDIgKi9cbiAgbWVudSxcbiAgbmF2LFxuICBzZWN0aW9uLFxuICBzdW1tYXJ5IHsgLyogMSAqL1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIFxuICAvKipcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAqL1xuICBcbiAgYXVkaW8sXG4gIGNhbnZhcyxcbiAgcHJvZ3Jlc3MsXG4gIHZpZGVvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICAgKi9cbiAgXG4gIGF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICAgKi9cbiAgXG4gIHByb2dyZXNzIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgKi9cbiAgXG4gIHRlbXBsYXRlLCAvKiAxICovXG4gIFtoaWRkZW5dIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIFxuICAvKiBMaW5rc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgKi9cbiAgXG4gIGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gICAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICAgIGNvbG9yOmluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICAgKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICovXG4gIFxuICBhOmFjdGl2ZSxcbiAgYTpob3ZlciB7XG4gICAgb3V0bGluZS13aWR0aDogMDtcbiAgfVxuICBcbiAgYTp2aXNpdGVkIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICB9XG4gIFxuICBcbiAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiAgXG4gIC8qKlxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYWJiclt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xuICB9XG4gIFxuICAvKipcbiAgICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gICAqL1xuICBcbiAgYixcbiAgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYixcbiAgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICB9XG4gIFxuICAvKipcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICAgKi9cbiAgXG4gIGRmbiB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG4gIFxuICAvKipcbiAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgKi9cbiAgXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gICAqL1xuICBcbiAgbWFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cbiAgXG4gIHNtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICAgKiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuICBcbiAgc3ViLFxuICBzdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIH1cbiAgXG4gIHN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xuICB9XG4gIFxuICBzdXAge1xuICAgIHRvcDogLTAuNWVtO1xuICB9XG4gIFxuICAvKiBFbWJlZGRlZCBjb250ZW50XG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gIFxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gICAqL1xuICBcbiAgaW1nIHtcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAgICovXG4gIFxuICBzdmc6bm90KDpyb290KSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICBcbiAgLyogR3JvdXBpbmcgY29udGVudFxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICovXG4gIFxuICBjb2RlLFxuICBrYmQsXG4gIHByZSxcbiAgc2FtcCB7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAgICovXG4gIFxuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICovXG4gIFxuICBociB7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xuICB9XG4gIFxuICAvKiBGb3Jtc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBpbnB1dCxcbiAgc2VsZWN0LFxuICB0ZXh0YXJlYSB7XG4gICAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICAgIG1hcmdpbjogMDsgLyogMiAqL1xuICB9XG4gIFxuICAvKipcbiAgICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gICAqL1xuICBcbiAgb3B0Z3JvdXAge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAvKipcbiAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBpbnB1dCB7IC8qIDEgKi9cbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBzZWxlY3QgeyAvKiAxICovXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAgICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgKi9cbiAgXG4gIGJ1dHRvbixcbiAgaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuICBbdHlwZT1cInJlc2V0XCJdLFxuICBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgICAtbW96LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICAgIGFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gICAqL1xuICBcbiAgYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuICBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIFxuICAvKipcbiAgICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICAgKi9cbiAgXG4gIGJ1dHRvbjotbW96LWZvY3VzcmluZyxcbiAgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICovXG4gIFxuICBmaWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAgICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICovXG4gIFxuICBsZWdlbmQge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMyAqL1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gICAqL1xuICBcbiAgdGV4dGFyZWEge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG4gIFxuICAvKipcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICAgKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICAgKi9cbiAgXG4gIFt0eXBlPVwiY2hlY2tib3hcIl0sXG4gIFt0eXBlPVwicmFkaW9cIl0ge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gICAqL1xuICBcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG4gIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAgICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gICAqL1xuICBcbiAgW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDIgKi9cbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAgICovXG4gIFxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAgICovXG4gIFxuICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIG9wYWNpdHk6IDAuNTQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICAqL1xuICBcbiAgOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIH1cbiAgXG4gIFxuICAqe1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuICBcbiAgaW5wdXQsIHRleHRhcmVhIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICBcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gIFxuICAgIH1cbiAgICAmOi13ZWJraXQtYXV0b2ZpbGwsICY6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgICAmOi13ZWJraXQtYXV0b2ZpbGw6YWN0aXZlLCAmOi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMge1xuICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAxMDAwcHggZ3JleSBpbnNldDsgLy9jaGFuZ2UgbGF0ZXJcbiAgICB9XG4gIFxuICB9XG4gIFxuICBzZWN0aW9uIHtcbiAgICBjb3VudGVyLXJlc2V0OiBudW1iZXItY291bnRlcjtcbiAgfVxuICBcbiAgdWwge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuICBcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCxcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbiAgc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGwsXG4gIHNlbGVjdDotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxuICBzZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAzMHB4ICMyMDIwMjAgaW5zZXQgIWltcG9ydGFudDtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgfVxuICBcbiAgaW5wdXQsXG4gIHRleHRhcmVhIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9IiwiLypcbiBOT1JNQUxJWkVcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbmE6dmlzaXRlZCB7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9YnV0dG9uXSxcblt0eXBlPXJlc2V0XSxcblt0eXBlPXN1Ym1pdF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICAtbW96LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBhcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPXN1Ym1pdF06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9cmVzZXRdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPWNoZWNrYm94XSxcblt0eXBlPXJhZGlvXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAyICovXG4gIGFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmlucHV0LCB0ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG5pbnB1dDpmb2N1cywgaW5wdXQ6YWN0aXZlLCB0ZXh0YXJlYTpmb2N1cywgdGV4dGFyZWE6YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbmlucHV0Oi13ZWJraXQtYXV0b2ZpbGwsIGlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsIGlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6YWN0aXZlLCBpbnB1dDotd2Via2l0LWF1dG9maWxsOmZvY3VzLCB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsLCB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmhvdmVyLCB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmFjdGl2ZSwgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDAgMTAwMHB4IGdyZXkgaW5zZXQ7XG59XG5cbnNlY3Rpb24ge1xuICBjb3VudGVyLXJlc2V0OiBudW1iZXItY291bnRlcjtcbn1cblxudWwge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbmlucHV0Oi13ZWJraXQtYXV0b2ZpbGwsXG5pbnB1dDotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbnRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGwsXG50ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxudGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbnNlbGVjdDotd2Via2l0LWF1dG9maWxsLFxuc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsXG5zZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDAgMzBweCAjMjAyMDIwIGluc2V0ICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xufVxuXG5pbnB1dCxcbnRleHRhcmVhIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogQ29sb3VycyAqL1xuLyogVHlwZSAqL1xuLyogU3BhY2luZyAqL1xuLyogQnJlYWtwb2ludHMgKi9cbi8qIEFuaW1hdGlvbiBFYXNpbmcgKi9cbi8qIEJvcmRlciAqL1xuQGtleWZyYW1lcyBsaW5rLWhvdmVyIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgfVxuICA1MC4wMSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxpbmstaG92ZXItLWludmVydGVkIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIH1cbiAgNTAuMDElIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59XG4vKiBUeXBvZ3JhcGh5ICovXG5odG1sIHtcbiAgZm9udC1zaXplOiA2Mi41JTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIwMDBweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDAuNXZ3O1xuICB9XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LXRleHQtcHJvXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG59XG5cbi50eXBlLS14bCxcbi50eXBlLS1sLFxuLm5hdi1tZW51X19saW5rLFxuLnR5cGUtLW0sXG4udHlwZS0tcyB7XG4gIGZvbnQtZmFtaWx5OiBcImZyZWlnaHQtZGlzcGxheS1wcm9cIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi50eXBlLS14bCB7XG4gIGZvbnQtc2l6ZTogNnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ1MHB4KSB7XG4gIC50eXBlLS14bCB7XG4gICAgZm9udC1zaXplOiA3LjZyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC50eXBlLS14bCB7XG4gICAgZm9udC1zaXplOiA5LjZyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS14bCB7XG4gICAgZm9udC1zaXplOiAxMS44cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDcwcHgpIHtcbiAgLnR5cGUtLXhsIHtcbiAgICBmb250LXNpemU6IDE0LjlyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIwMDBweCkge1xuICAudHlwZS0teGwge1xuICAgIGZvbnQtc2l6ZTogMThyZW07XG4gIH1cbn1cblxuLnR5cGUtLWwsIC5uYXYtbWVudV9fbGluayB7XG4gIGZvbnQtc2l6ZTogNC44cmVtO1xuICBsaW5lLWhlaWdodDogMS4xO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLnR5cGUtLWwsIC5uYXYtbWVudV9fbGluayB7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tbCwgLm5hdi1tZW51X19saW5rIHtcbiAgICBmb250LXNpemU6IDcuNnJlbTtcbiAgfVxufVxuXG4udHlwZS0tbSB7XG4gIGZvbnQtc2l6ZTogMy45cmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnR5cGUtLW0ge1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4xO1xuICB9XG59XG5cbi50eXBlLS1zIHtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tcyB7XG4gICAgZm9udC1zaXplOiAzLjlyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgfVxufVxuXG4udHlwZS0tYm9keSB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW46IDA7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tYm9keSB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAudHlwZS0tYm9keSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG59XG4udHlwZS0tYm9keSArIC50eXBlLS1ib2R5IHtcbiAgbWFyZ2luLXRvcDogMi40cmVtO1xufVxuXG4udHlwZS0tYWx0LWwge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LXNhbnMtcHJvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnR5cGUtLWFsdC1sIHtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC50eXBlLS1hbHQtbCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG59XG5cbi50eXBlLS1hbHQtcyB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBcImZyZWlnaHQtc2Fucy1wcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnR5cGUtLWFsdC1zIHtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgfVxufVxuXG4udHlwZS0tbC1tYXJnaW4ge1xuICBtYXJnaW46IDAgMCA0cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLnR5cGUtLWwtbWFyZ2luIHtcbiAgICBtYXJnaW46IDAgMCA1LjZyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS1sLW1hcmdpbiB7XG4gICAgbWFyZ2luOiAwIDAgNy4ycmVtO1xuICB9XG59XG5cbi50eXBlLS1tLW1hcmdpbiB7XG4gIG1hcmdpbjogMCAwIDMuMnJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS1tLW1hcmdpbiB7XG4gICAgbWFyZ2luOiAwIDAgNHJlbTtcbiAgfVxufVxuXG4udHlwZS0tcy1tYXJnaW4ge1xuICBtYXJnaW46IDAgMCAxLjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tcy1tYXJnaW4ge1xuICAgIG1hcmdpbjogMCAwIDIuNHJlbTtcbiAgfVxufVxuXG4udHlwZS0tYm9keS1jb2xvciB7XG4gIGNvbG9yOiAjNDY0NjQ2O1xufVxuXG4udHlwZS0td2hpdGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5ibG9jaywgLm5vLXdyYXAtLWFuZC1icmVhaywgLmJsb2NrLS1mdWxsLXdpZHRoIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ibG9jay0tZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5pbmxpbmUtYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5uby1tYXJnaW4ge1xuICBtYXJnaW46IDA7XG59XG5cbi5uby1tYXJnaW4tLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5uby1tYXJnaW4tLXRvcCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5uby13cmFwLCAubm8td3JhcC0tYW5kLWJyZWFrIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLm5vLXdyYXAtLWFuZC1icmVhayB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4udGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi50ZXh0LXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi50ZXh0LWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgd2lkdGg6IDkwJTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLmdyaWQge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5ncmlkIHtcbiAgICBncmlkLWNvbHVtbi1nYXA6IDIuNHJlbTtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmdyaWQge1xuICAgIGdyaWQtY29sdW1uLWdhcDogMy4ycmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5vZmZzZXQtY29udGVudCB7XG4gICAgZ3JpZC1jb2x1bW46IDMvNztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5vZmZzZXQtY29udGVudCB7XG4gICAgZ3JpZC1jb2x1bW46IDYvMTE7XG4gIH1cbn1cblxuLmNvbHVtbiB7XG4gIGdyaWQtY29sdW1uOiAxLzc7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb2x1bW4tLWhhbGYtc3RhcnQge1xuICAgIGdyaWQtY29sdW1uOiAxLzQ7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuY29sdW1uLS1oYWxmLXN0YXJ0IHtcbiAgICBncmlkLWNvbHVtbjogMS82O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb2x1bW4tLWhhbGYtZW5kIHtcbiAgICBncmlkLWNvbHVtbjogNC83O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvbHVtbi0taGFsZi1lbmQge1xuICAgIGdyaWQtY29sdW1uOiA2LzExO1xuICB9XG59XG5cbi5zZWN0aW9uLS1sIHtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zZWN0aW9uLS1sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMC40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb24tLWwge1xuICAgIG1hcmdpbi1ib3R0b206IDE2cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnNlY3Rpb24tLWwge1xuICAgIG1hcmdpbi1ib3R0b206IDIyLjRyZW07XG4gIH1cbn1cblxuLnNlY3Rpb24tLXMge1xuICBtYXJnaW4tYm90dG9tOiA0LjhyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAuc2VjdGlvbi0tcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNi40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2VjdGlvbi0tcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5zZWN0aW9uLS1zIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMC40cmVtO1xuICB9XG59XG5cbi5idXR0b24ge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiZnJlaWdodC1zYW5zLXByb1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1mYW1pbHk6IFwiZnJlaWdodC1zYW5zLXByb1wiLCBzYW5zLXNlcmlmO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYnV0dG9uIHtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC5idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuLmJ1dHRvbjpob3ZlciAuYnV0dG9uX190ZXh0IHtcbiAgY29sb3I6ICNmNTYzMDg7XG4gIHRyYW5zaXRpb246IGNvbG9yIDUwMG1zIGVhc2U7XG59XG4uYnV0dG9uOmhvdmVyIC5idXR0b25fX2xpbmUge1xuICBhbmltYXRpb246IGxpbmstaG92ZXIgNjAwbXMgZWFzZSAwcyAxIGZvcndhcmRzO1xuICB0cmFuc2l0aW9uOiA1MDBtcyBlYXNlIDEwMG1zO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjU2MzA4O1xufVxuXG4uYnV0dG9uLS1tYWluIC5idXR0b25fX3RleHQge1xuICBjb2xvcjogYmxhY2s7XG59XG4uYnV0dG9uLS1tYWluIC5idXR0b25fX2xpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmJ1dHRvbi0taW52ZXJ0ZWQgLmJ1dHRvbl9fdGV4dCB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5idXR0b24tLWludmVydGVkIC5idXR0b25fX2xpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ1dHRvbl9fdGV4dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiBjb2xvciA1MDBtcyBlYXNlO1xufVxuXG4uYnV0dG9uX19saW5lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMC4ycmVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogMC40cmVtO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXMgZWFzZTtcbn1cblxuLmJ1dHRvbi0tbWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IDQuOHJlbTtcbn1cblxuLmxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cbi5saW5rOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZTRlNTM7XG4gIGJvdHRvbTogM3B4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwLjFyZW07XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNpdGlvbjogNjAwbXMgZWFzZTtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubGluazpob3Zlcjo6YWZ0ZXIge1xuICBhbmltYXRpb246IGxpbmstaG92ZXIgNjAwbXMgZWFzZSAwcyAxIGZvcndhcmRzO1xufVxuXG4ubGluay0tZGFyayB7XG4gIGNvbG9yOiAjQ0FDOUM5O1xufVxuLmxpbmstLWRhcms6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0NBQzlDOTtcbn1cbi5saW5rLS1kYXJrOnZpc2l0ZWQge1xuICBjb2xvcjogI0NBQzlDOTtcbn1cblxuLmhlcm9fX3Byb2plY3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuICBncmlkLWNvbHVtbi1nYXA6IDIuNHJlbTtcbiAgbWFyZ2luLXRvcDogOHJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0IHtcbiAgICBncmlkLWNvbHVtbi1nYXA6IDIuNHJlbTtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlcm9fX3Byb2plY3Qge1xuICAgIGdyaWQtY29sdW1uLWdhcDogMy4ycmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVyb19fcHJvamVjdCB7XG4gICAgbWFyZ2luLXRvcDogMTAuNHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0IHtcbiAgICBtYXJnaW4tdG9wOiAxNnJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0IHtcbiAgICBtYXJnaW4tdG9wOiAyMi40cmVtO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5oZXJvX19wcm9qZWN0LW5vIHNwYW4sXG4gIC5oZXJvX19wcm9qZWN0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbn1cblxuLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICBncmlkLWNvbHVtbjogMi81O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICAgIGdyaWQtY29sdW1uOiAzLzc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVyb19fcHJvamVjdC10aXRsZSB7XG4gICAgZ3JpZC1jb2x1bW46IDYvMTE7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU0OXB4KSB7XG4gIC5oZXJvX19wcm9qZWN0LXRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxufVxuXG4uaGVyb19fcHJvamVjdC1ubyB7XG4gIGdyaWQtY29sdW1uOiAxLzI7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAuaGVyb19fcHJvamVjdC1ubyB7XG4gICAgZ3JpZC1jb2x1bW46IDEvMztcbiAgfVxufVxuXG4ubmF2LW1lbnUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbn1cblxuLm5hdi1tZW51X19saXN0IHtcbiAgbWFyZ2luOiAxMnJlbSBhdXRvIDA7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4ubmF2LW1lbnVfX2xpc3QtaXRlbSB7XG4gIHBhZGRpbmc6IDMuMnJlbSAwO1xufVxuXG4ubmF2LW1lbnVfX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk2MHB4KSB7XG4gIC5uYXYtbWVudV9fbGluayB7XG4gICAgZm9udC1zaXplOiAxMi44cmVtO1xuICB9XG59XG5cbi5uYXYtbWVudV9fbGlzdDpob3ZlciA+IC5uYXYtbWVudV9fbGlzdC1pdGVtIHNwYW46bm90KDpob3Zlcikge1xuICBjb2xvcjogcmVkO1xufVxuXG4ubmF2LWJhciB7XG4gIHBhZGRpbmc6IDEuNnJlbSAwO1xufVxuXG4ubmF2LWJhcl9fbWV0YS1vbmUsXG4ubmF2LWJhcl9fbWV0YS10d28ge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5hdi1iYXJfX21ldGEtb25lLFxuICAubmF2LWJhcl9fbWV0YS10d28ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uYXYtYmFyX19tZXRhLW9uZSB7XG4gICAgZ3JpZC1jb2x1bW46IDMvNTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5uYXYtYmFyX19tZXRhLW9uZSB7XG4gICAgZ3JpZC1jb2x1bW46IDQvNjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubmF2LWJhcl9fbWV0YS10d28ge1xuICAgIGdyaWQtY29sdW1uOiA1LzY7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAubmF2LWJhcl9fbWV0YS10d28ge1xuICAgIGdyaWQtY29sdW1uOiA2Lzg7XG4gIH1cbn1cblxuLm5hdi1iYXJfX3RyaWdnZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLm5hdi1iYXJfX3RyaWdnZXIge1xuICAgIGdyaWQtY29sdW1uOiA2Lzc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAubmF2LWJhcl9fdHJpZ2dlciB7XG4gICAgZ3JpZC1jb2x1bW46IDEwLzExO1xuICB9XG59XG5cbi5oYW1idXJnZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDIuNHJlbTtcbn1cblxuLmhhbWJ1cmdlcl9fbGluZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbn1cbi5oYW1idXJnZXJfX2xpbmUgKyAuaGFtYnVyZ2VyX19saW5lIHtcbiAgbWFyZ2luLXRvcDogMC40cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oYW1idXJnZXJfX2xpbmUgKyAuaGFtYnVyZ2VyX19saW5lIHtcbiAgICBtYXJnaW4tdG9wOiAwLjhyZW07XG4gIH1cbn0iLCIvKiBDb2xvdXJzICovXG4kY29sb3VyLS1wYXNzaW9uOiAjZjU2MzA4O1xuJGNvbG91ci0tZ3JleTogI0YyRjJGMjtcbiRjb2xvdXItLWdyaXQ6ICMyMDIwMjA7XG4kY29sb3VyLS13aGl0ZTogd2hpdGU7XG4kY29sb3VyLS1ibGFjazogYmxhY2s7XG4kY29sb3VyLS10ZXh0LW9uLWdyaXQ6ICNDQUM5Qzk7XG4kY29sb3VyLS1ib2R5LXR5cGU6ICM0NjQ2NDY7XG4kY29sb3VyLS1saWdodC10eXBlOiAjNTI1MjUyO1xuXG4vKiBUeXBlICovXG4kdHlwZS0tbGluZS1oZWlnaHQ6IDEuNTtcbiR0eXBlLS1mYW1pbHktZGlzcGxheTogXCJmcmVpZ2h0LWRpc3BsYXktcHJvXCIsIHNlcmlmO1xuJHR5cGUtLWZhbWlseS1ib2R5OiBcImZyZWlnaHQtdGV4dC1wcm9cIiwgc2VyaWY7XG4kdHlwZS0tZmFtaWx5LWFsdDogXCJmcmVpZ2h0LXNhbnMtcHJvXCIsIHNhbnMtc2VyaWY7XG5cbiR0eXBlLS1mb250LXdlaWdodC1yZWc6IDQwMDtcbiR0eXBlLS1mb250LXdlaWdodC1zZW1pOiA2MDA7XG4kdHlwZS0tZm9udC13ZWlnaHQtYm9sZDogNzAwO1xuXG4vKiBTcGFjaW5nICovXG4kc3BhY2luZy1ydWxlOiAwLjhyZW07XG4kc3BhY2luZy1ydWxlLWhhbGY6ICRzcGFjaW5nLXJ1bGUgLyAyO1xuXG4vKiBCcmVha3BvaW50cyAqL1xuJGJyZWFrcG9pbnQtLXNtYWxsOiA1NTBweDtcbiRicmVha3BvaW50LS1tZWRpdW06IDc2OHB4O1xuJGJyZWFrcG9pbnQtLWxhcmdlOiA5NjBweDtcbiRicmVha3BvaW50LS14LWxhcmdlOiAxMjAwcHg7XG4kYnJlYWtwb2ludC0tdHdlYWtwb2ludDogMTQ3MHB4O1xuJGJyZWFrcG9pbnQtLXh4LWxhcmdlOiAxNjAwcHg7XG4kYnJlYWtwb2ludC0teHh4LWxhcmdlOiAyMDAwcHg7XG5cbi8qIEFuaW1hdGlvbiBFYXNpbmcgKi9cbiRjdWJpYy1iZXppZXItLXpvb206IGN1YmljLWJlemllcigwLjQyMCwwLjAwMCwwLjAwMiwxLjAwMCk7XG5cbi8qIEJvcmRlciAqL1xuJGJvcmRlci10b3A6IDJweCBzb2xpZCAkY29sb3VyLS1ncml0OyIsIkBrZXlmcmFtZXMgbGluay1ob3ZlciB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cblxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgfVxuXG4gIDUwLjAxJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGxpbmstaG92ZXItLWludmVydGVkIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuXG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxuXG4gIDUwLjAxJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59IiwiLyogVHlwb2dyYXBoeSAqL1xuJHR5cGUtLXR3ZWFrcG9pbnQ6IDQ1MHB4O1xuXG5odG1sIHtcblx0Zm9udC1zaXplOiA2Mi41JTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teHh4LWxhcmdlKSB7XG5cdFx0Zm9udC1zaXplOiAwLjUwdnc7XG5cdH1cbn1cblxuYm9keSB7XG5cdGZvbnQtZmFtaWx5OiAkdHlwZS0tZmFtaWx5LWJvZHk7XG5cdGZvbnQtc2l6ZTogMTAwJTtcbn1cblxuLnR5cGUtLXhsLFxuLnR5cGUtLWwsXG4udHlwZS0tbSxcbi50eXBlLS1zIHtcblx0Zm9udC1mYW1pbHk6ICR0eXBlLS1mYW1pbHktZGlzcGxheTtcblx0Zm9udC13ZWlnaHQ6IDcwMDtcbn1cbiAgXG4udHlwZS0teGwge1xuXHRmb250LXNpemU6IDZyZW07XG5cdGxpbmUtaGVpZ2h0OiAxLjE7XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJHR5cGUtLXR3ZWFrcG9pbnQpIHtcblx0XHRmb250LXNpemU6IDcuNnJlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdGZvbnQtc2l6ZTogOS42cmVtO1xuXHRcdGxpbmUtaGVpZ2h0OiAxO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdGZvbnQtc2l6ZTogMTEuOHJlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS10d2Vha3BvaW50KSB7XG5cdFx0Zm9udC1zaXplOiAxNC45cmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXh4eC1sYXJnZSkge1xuXHRcdGZvbnQtc2l6ZTogMThyZW07XG5cdH1cbn1cblxuLnR5cGUtLWwge1xuXHRmb250LXNpemU6IDQuOHJlbTtcblx0bGluZS1oZWlnaHQ6IDEuMTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRmb250LXNpemU6IDZyZW07XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0Zm9udC1zaXplOiA3LjZyZW07XG5cdH1cbn1cbiAgXG4udHlwZS0tbSB7XG5cdGZvbnQtc2l6ZTogMy45cmVtO1xuXHRsaW5lLWhlaWdodDogMS4zO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRmb250LXNpemU6IDZyZW07XG5cdFx0bGluZS1oZWlnaHQ6IDEuMTtcblx0fVxufVxuIFxuLnR5cGUtLXMge1xuXHRmb250LXNpemU6IDIuNXJlbTtcblx0bGluZS1oZWlnaHQ6IDEuMztcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0Zm9udC1zaXplOiAzLjlyZW07XG5cdFx0bGluZS1oZWlnaHQ6IDEuMjtcblx0fVxufVxuICBcbi50eXBlLS1ib2R5IHtcblx0QGluY2x1ZGUgdGV4dC1zaXplO1xuXHRsaW5lLWhlaWdodDogJHR5cGUtLWxpbmUtaGVpZ2h0O1xuXHRtYXJnaW46IDA7XG5cblx0JiArICYge1xuXHRcdG1hcmdpbi10b3A6IHNwYWNpbmcoMyk7XG5cdH1cbn1cblxuLnR5cGUtLWFsdC1sIHtcblx0QGluY2x1ZGUgY2FwaXRhbGlzZWQtdGV4dCh0cnVlKTtcblx0QGluY2x1ZGUgdGV4dC1zaXplO1xufVxuXG4udHlwZS0tYWx0LXMge1xuXHRAaW5jbHVkZSBjYXBpdGFsaXNlZC10ZXh0KHRydWUpO1xuXHRAaW5jbHVkZSB0ZXh0LXNpemUoMS4yLCBudWxsLCAxLjQpO1xufVxuXG4udHlwZS0tbC1tYXJnaW4ge1xuXHRtYXJnaW46IDAgMCBzcGFjaW5nKDUpO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdG1hcmdpbjogMCAwIHNwYWNpbmcoNyk7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0bWFyZ2luOiAwIDAgc3BhY2luZyg5KTtcblx0fVxufVxuXG4udHlwZS0tbS1tYXJnaW4ge1xuXHRtYXJnaW46IDAgMCBzcGFjaW5nKDQpO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRtYXJnaW46IDAgMCBzcGFjaW5nKDUpO1xuXHR9XG59XG5cbi50eXBlLS1zLW1hcmdpbiB7XG5cdG1hcmdpbjogMCAwIHNwYWNpbmcoMik7XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdG1hcmdpbjogMCAwIHNwYWNpbmcoMyk7XG5cdH1cbn1cblxuLnR5cGUtLWJvZHktY29sb3Ige1xuXHRjb2xvcjogJGNvbG91ci0tYm9keS10eXBlO1xufVxuXG4udHlwZS0td2hpdGUge1xuXHRjb2xvcjogJGNvbG91ci0td2hpdGU7XG59IiwiQG1peGluIG1lZGlhLXF1ZXJ5KCRkZXZpY2UsICR3aWR0aC10eXBlOiBudWxsKSB7XG5cdEBpZiAkd2lkdGgtdHlwZSA9PSBudWxsIHtcblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGV2aWNlKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBtZWRpYSBzY3JlZW4gYW5kICgjeyR3aWR0aC10eXBlfTogJGRldmljZSkge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59IiwiQG1peGluIHRleHQtc2l6ZSgkc21hbGw6IDEuNiwgJG1lZGl1bTogMS44LCAkbGFyZ2U6IDIpIHtcblx0Zm9udC1zaXplOiAjeyRzbWFsbH1yZW07XG5cblx0QGlmICRtZWRpdW0gIT0gbnVsbCB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdFx0Zm9udC1zaXplOiAjeyRtZWRpdW19cmVtO1xuXHRcdH1cblx0fVxuXHRcblx0QGlmICRsYXJnZSAhPSBudWxsIHtcblx0XHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teHgtbGFyZ2UpIHtcblx0XHRcdGZvbnQtc2l6ZTogI3skbGFyZ2V9cmVtO1xuXHRcdH1cblx0fVxufSIsIkBtaXhpbiBjYXBpdGFsaXNlZC10ZXh0KCR0eXBlZmFjZS1hbHQ6IGZhbHNlLCAkYm9sZDogZmFsc2UsICRsZXR0ZXItc3BhY2luZzogZmFsc2UpIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICBAaWYgKCR0eXBlZmFjZS1hbHQgPT0gdHJ1ZSkge1xuICAgIGZvbnQtZmFtaWx5OiAkdHlwZS0tZmFtaWx5LWFsdDtcbiAgfVxuXG4gIEBpZiAoJGJvbGQgPT0gdHJ1ZSkge1xuICAgIGZvbnQtd2VpZ2h0OiAkdHlwZS0tZm9udC13ZWlnaHQtc2VtaTtcbiAgfVxuXG4gIEBpZiAoJGxldHRlci1zcGFjaW5nID09IHRydWUpIHtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4OyAgXG4gIH1cbn0iLCIuYmxvY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmJsb2NrLS1mdWxsLXdpZHRoIHtcbiAgQGV4dGVuZCAuYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5pbmxpbmUtYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59IiwiLm5vLW1hcmdpbiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5vLW1hcmdpbi0tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm5vLW1hcmdpbi0tdG9wIHtcbiAgbWFyZ2luLXRvcDogMDtcbn0iLCIubm8td3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi5uby13cmFwLS1hbmQtYnJlYWsge1xuICBAZXh0ZW5kIC5uby13cmFwO1xuICBAZXh0ZW5kIC5ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDE7XG59IiwiLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4udGV4dC1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iLCIuY29udGFpbmVyIHtcbiAgQGluY2x1ZGUgY29udGFpbmVyO1xufSIsIkBtaXhpbiBjb250YWluZXIge1xuXHRtYXJnaW4tcmlnaHQ6IGF1dG87XG5cdG1hcmdpbi1sZWZ0OiBhdXRvO1xuXHR3aWR0aDogOTAlO1xufSIsIi5ncmlkIHtcbiAgQGluY2x1ZGUgZ3JpZDtcbn0iLCJAbWl4aW4gZ3JpZCgkZGV2aWNlOiBudWxsLCAkZnJvbUJlZ2lubmluZzogZmFsc2UpIHtcblx0QGlmICRkZXZpY2UgPT0gbnVsbCB7XG5cdFx0QGlmICRmcm9tQmVnaW5uaW5nID09IHRydWUge1xuXHRcdFx0ZGlzcGxheTogZ3JpZDtcblx0XHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG5cdFx0XHRncmlkLWNvbHVtbi1nYXA6IHNwYWNpbmcoMyk7XG5cdFx0fVxuXHRcdEBlbHNlIHtcblx0XHRcdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdFx0XHRkaXNwbGF5OiBncmlkO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRAZWxzZSB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGRldmljZSkge1xuXHRcdFx0ZGlzcGxheTogZ3JpZDtcblx0XHR9XG5cdH1cbiAgXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdGdyaWQtY29sdW1uLWdhcDogc3BhY2luZygzKTtcblx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcblx0XHRncmlkLWNvbHVtbi1nYXA6IHNwYWNpbmcoNCk7XG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XG5cdH1cbn0iLCIub2Zmc2V0LWNvbnRlbnQge1xuXHRAaW5jbHVkZSBvZmZzZXQtY29udGVudDtcbn0iLCJAbWl4aW4gb2Zmc2V0LWNvbnRlbnQoKSB7XG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdGdyaWQtY29sdW1uOiAzIC8gNztcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG5cdFx0Z3JpZC1jb2x1bW46IDYgLyAxMTtcblx0fVxufSIsIi5jb2x1bW4ge1xuXHRncmlkLWNvbHVtbjogMSAvIDc7XG59XG5cbi5jb2x1bW4tLWhhbGYtc3RhcnQge1xuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0Z3JpZC1jb2x1bW46IDEgLyA0O1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcblx0XHRncmlkLWNvbHVtbjogMSAvIDY7XG5cdH1cbn1cblxuLmNvbHVtbi0taGFsZi1lbmQge1xuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0Z3JpZC1jb2x1bW46IDQgLyA3O1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcblx0XHRncmlkLWNvbHVtbjogNiAvIDExO1xuXHR9XG59IiwiLnNlY3Rpb24tLWwge1xuICBAaW5jbHVkZSBzZWN0aW9uLS1sO1xufVxuXG4uc2VjdGlvbi0tcyB7XG4gIEBpbmNsdWRlIHNlY3Rpb24tLXM7XG59IiwiQG1peGluIHNlY3Rpb24tLWwoJG1hcmdpbi1wb3M6IGJvdHRvbSkge1xuXHRtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoMTApO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoMTMpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcblx0XHRtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoMjApO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXh4LWxhcmdlKSB7XG5cdFx0bWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDI4KTtcblx0fVxufSIsIkBtaXhpbiBzZWN0aW9uLS1zKCRtYXJnaW4tcG9zOiBib3R0b20pIHtcbiAgbWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDYpO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuICAgIG1hcmdpbi0jeyRtYXJnaW4tcG9zfTogc3BhY2luZyg4KTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICBtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoMTApO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcbiAgICBtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoMTMpO1xuICB9XG59IiwiLmJ1dHRvbiB7XG4gIEBpbmNsdWRlIHRleHQtc2l6ZTtcbiAgQGluY2x1ZGUgY2FwaXRhbGlzZWQtdGV4dCh0cnVlLCB0cnVlLCB0cnVlKTtcbiAgQGluY2x1ZGUgYnV0dG9uO1xuXG4gICY6aG92ZXIge1xuICAgIC5idXR0b25fX3RleHQge1xuICAgICAgY29sb3I6ICRjb2xvdXItLXBhc3Npb247XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciA1MDBtcyBlYXNlO1xuICAgIH1cblxuICAgIC5idXR0b25fX2xpbmUge1xuICAgICAgYW5pbWF0aW9uOiBsaW5rLWhvdmVyIDYwMG1zIGVhc2UgMHMgMSBmb3J3YXJkcztcbiAgICAgIHRyYW5zaXRpb246IDUwMG1zIGVhc2UgMTAwbXM7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyLS1wYXNzaW9uO1xuICAgIH1cbiAgfVxufVxuXG4uYnV0dG9uLS1tYWluIHtcbiAgLmJ1dHRvbl9fdGV4dCB7XG4gICAgY29sb3I6ICRjb2xvdXItLWJsYWNrO1xuICB9XG5cbiAgLmJ1dHRvbl9fbGluZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG91ci0tYmxhY2s7XG4gIH1cbn1cblxuLmJ1dHRvbi0taW52ZXJ0ZWQge1xuICAuYnV0dG9uX190ZXh0IHtcbiAgICBjb2xvcjogJGNvbG91ci0td2hpdGU7XG4gIH1cblxuICAuYnV0dG9uX19saW5lIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyLS13aGl0ZTtcbiAgfVxufVxuXG4uYnV0dG9uX190ZXh0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IGNvbG9yIDUwMG1zIGVhc2U7XG59XG5cbi5idXR0b25fX2xpbmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwLjJyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiBzcGFjaW5nKDEpIC8gMjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDUwMG1zIGVhc2U7XG59XG5cbi5idXR0b24tLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiBzcGFjaW5nKDYpO1xufSIsIkBtaXhpbiBidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1mYW1pbHk6ICR0eXBlLS1mYW1pbHktYWx0O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59IiwiLmxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcblxuICAmOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGU0ZTUzO1xuICAgIGJvdHRvbTogM3B4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMC4xcmVtO1xuICAgIGxlZnQ6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zaXRpb246IDYwMG1zIGVhc2U7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAmOmhvdmVyIHtcbiAgICAmOjphZnRlciB7XG4gICAgICBhbmltYXRpb246IGxpbmstaG92ZXIgNjAwbXMgZWFzZSAwcyAxIGZvcndhcmRzO1xuICAgIH1cbiAgfVxufVxuXG4ubGluay0tZGFyayB7XG4gIGNvbG9yOiAkY29sb3VyLS10ZXh0LW9uLWdyaXQ7XG5cbiAgJjo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLXRleHQtb24tZ3JpdDtcbiAgfVxuXG4gICY6dmlzaXRlZCB7XG4gICAgY29sb3I6ICRjb2xvdXItLXRleHQtb24tZ3JpdDtcbiAgfVxufSIsIi5oZXJvX19wcm9qZWN0IHtcbiAgQGluY2x1ZGUgZ3JpZChudWxsLCB0cnVlKTtcbiAgQGluY2x1ZGUgc2VjdGlvbi0tbCh0b3ApO1xufVxuXG4uaGVyb19fcHJvamVjdC1ubyBzcGFuLFxuLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtIC0gMSwgbWF4LXdpZHRoKSB7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICB9XG59XG5cbi5oZXJvX19wcm9qZWN0LXRpdGxlIHtcbiAgQGluY2x1ZGUgb2Zmc2V0LWNvbnRlbnQ7XG4gIGdyaWQtY29sdW1uOiAyIC8gNTtcbiAgXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCAtIDEsIG1heC13aWR0aCkge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG59XG5cbi5oZXJvX19wcm9qZWN0LW5vIHtcbiAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuICAgIGdyaWQtY29sdW1uOiAxIC8gMztcbiAgfVxufSIsIi5uYXYtbWVudSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLWdyaXQ7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xufVxuXG4ubmF2LW1lbnVfX2xpc3Qge1xuICBtYXJnaW46IHNwYWNpbmcoMTUpIGF1dG8gMDtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi5uYXYtbWVudV9fbGlzdC1pdGVtIHtcbiAgcGFkZGluZzogc3BhY2luZyg0KSAwO1xufVxuXG4ubmF2LW1lbnVfX2xpbmsge1xuICBAZXh0ZW5kIC50eXBlLS1sO1xuICBkaXNwbGF5OiBibG9jaztcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbGFyZ2UpIHtcblx0XHRmb250LXNpemU6IDEyLjhyZW07XG4gIH1cbn1cblxuLm5hdi1tZW51X19saXN0OmhvdmVyID4gLm5hdi1tZW51X19saXN0LWl0ZW0gc3Bhbjpub3QoOmhvdmVyKSAge1xuICBjb2xvcjogcmVkO1xufSIsIi5uYXYtYmFyIHtcbiAgcGFkZGluZzogc3BhY2luZygyKSAwO1xufVxuXG4ubmF2LWJhcl9fbWV0YS1vbmUsXG4ubmF2LWJhcl9fbWV0YS10d28ge1xuICBkaXNwbGF5OiBub25lO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4ubmF2LWJhcl9fbWV0YS1vbmUge1xuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG4gICAgZ3JpZC1jb2x1bW46IDMgLyA1O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcbiAgICBncmlkLWNvbHVtbjogNCAvIDY7XG4gIH1cbn1cblxuLm5hdi1iYXJfX21ldGEtdHdvIHtcbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgIGdyaWQtY29sdW1uOiA1IC8gNjtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG4gICAgZ3JpZC1jb2x1bW46IDYgLyA4O1xuICB9XG59XG5cbi5uYXYtYmFyX190cmlnZ2VyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiByaWdodDtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBncmlkLWNvbHVtbjogNiAvIDc7XG5cdH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuICAgIGdyaWQtY29sdW1uOiAxMCAvIDExO1xuICB9XG59IiwiLmhhbWJ1cmdlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogMi40cmVtO1xufVxuXG4uaGFtYnVyZ2VyX19saW5lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyLS1ncml0O1xuXG4gICYgKyAmIHtcbiAgICBtYXJnaW4tdG9wOiAkc3BhY2luZy1ydWxlLWhhbGY7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmctcnVsZTtcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/
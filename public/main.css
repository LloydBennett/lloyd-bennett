/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/*
 NORMALIZE
 ==========================================================================*/
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
  color: inherit;
  text-decoration: none;
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

a:visited {
  color: inherit;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button; /* 2 */
  -moz-appearance: button; /* 2 */
  appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  -moz-appearance: textfield; /* 2 */
  appearance: textfield;
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

* {
  box-sizing: border-box;
}

input, textarea {
  background: none;
}
input:focus, input:active, textarea:focus, textarea:active {
  outline: none;
}
input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:active, input:-webkit-autofill:focus, textarea:-webkit-autofill, textarea:-webkit-autofill:hover, textarea:-webkit-autofill:active, textarea:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px grey inset;
}

section {
  counter-reset: number-counter;
}

ul {
  padding-left: 0;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 30px #202020 inset !important;
  -webkit-text-fill-color: white !important;
}

input,
textarea {
  padding: 0;
}

/* Colours */
/* Type */
/* Spacing */
/* Breakpoints */
/* Animation Easing */
/* Border */
@keyframes link-hover {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(100%);
  }
  50.01% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes link-hover--inverted {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-100%);
  }
  50.01% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
/* Typography */
html {
  font-size: 62.5%;
}
@media screen and (min-width: 2000px) {
  html {
    font-size: 0.5vw;
  }
}

body {
  font-family: "freight-text-pro", serif;
  color: #464646;
  font-size: 100%;
}

.type--xl,
.type--l,
.type--m,
.type--s {
  color: #2D2D2D;
  font-family: "freight-display-pro", serif;
  font-weight: 700;
}

.type--xl {
  font-size: 6rem;
  line-height: 1.1;
  margin: 0 0 4rem;
}
@media screen and (min-width: 450px) {
  .type--xl {
    font-size: 7.6rem;
  }
}
@media screen and (min-width: 550px) {
  .type--xl {
    font-size: 9.6rem;
    line-height: 1;
    margin: 0 0 5.6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--xl {
    font-size: 11.8rem;
    margin: 0 0 7.2rem;
  }
}
@media screen and (min-width: 1470px) {
  .type--xl {
    font-size: 14.9rem;
  }
}
@media screen and (min-width: 2000px) {
  .type--xl {
    font-size: 18rem;
  }
}

.type--l {
  font-size: 4.8rem;
  line-height: 1.1;
  margin: 0 0 3.2rem;
}
@media screen and (min-width: 550px) {
  .type--l {
    font-size: 6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--l {
    font-size: 7.6rem;
    margin: 0 0 4rem;
  }
}

.type--m {
  font-size: 3.9rem;
  line-height: 1.3;
  margin: 0 0 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--m {
    margin: 0 0 2.4rem;
    font-size: 6rem;
    line-height: 1.1;
  }
}

.type--s {
  font-size: 2.5rem;
  line-height: 1.3;
  margin: 0 0 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--s {
    margin: 0 0 2.4rem;
    font-size: 3.9rem;
    line-height: 1.2;
  }
}

.type--body {
  font-size: 1.6rem;
  line-height: 1.5;
  margin: 0;
}
@media screen and (min-width: 768px) {
  .type--body {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--body {
    font-size: 2rem;
  }
}
.type--body + .type--body {
  margin-top: 2.4rem;
}

.block, .block--full-width {
  display: block;
}

.block--full-width {
  width: 100%;
}

.flex {
  display: flex;
}

.inline-block {
  display: inline-block;
}

.no-margin {
  margin: 0;
}

.no-margin--bottom {
  margin-bottom: 0;
}

.no-margin--top {
  margin-top: 0;
}

.container {
  margin-right: auto;
  margin-left: auto;
  width: 90%;
}

@media screen and (min-width: 550px) {
  .grid {
    display: grid;
  }
}
@media screen and (min-width: 550px) {
  .grid {
    grid-column-gap: 2.4rem;
    grid-template-columns: repeat(6, 1fr);
  }
}
@media screen and (min-width: 1200px) {
  .grid {
    grid-column-gap: 3.2rem;
    grid-template-columns: repeat(10, 1fr);
  }
}

@media screen and (min-width: 550px) {
  .offset-content {
    grid-column: 3/7;
  }
}
@media screen and (min-width: 1200px) {
  .offset-content {
    grid-column: 6/11;
  }
}

.half-width {
  grid-column: 1/7;
}

@media screen and (min-width: 768px) {
  .half-width--start {
    grid-column: 1/4;
  }
}
@media screen and (min-width: 1200px) {
  .half-width--start {
    grid-column: 1/6;
  }
}

@media screen and (min-width: 768px) {
  .half-width--end {
    grid-column: 4/7;
  }
}
@media screen and (min-width: 1200px) {
  .half-width--end {
    grid-column: 6/11;
  }
}

.section--l {
  margin-bottom: 8rem;
}
@media screen and (min-width: 768px) {
  .section--l {
    margin-bottom: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--l {
    margin-bottom: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .section--l {
    margin-bottom: 22.4rem;
  }
}

.section--s {
  margin-bottom: 4.8rem;
}
@media screen and (min-width: 550px) {
  .section--s {
    margin-bottom: 6.4rem;
  }
}
@media screen and (min-width: 768px) {
  .section--s {
    margin-bottom: 8rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--s {
    margin-bottom: 10.4rem;
  }
}

.button {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-weight: 600;
  letter-spacing: 1px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  display: inline-block;
  font-family: "freight-sans-pro", sans-serif;
  overflow: hidden;
  padding: 0;
  position: relative;
}
@media screen and (min-width: 768px) {
  .button {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .button {
    font-size: 2rem;
  }
}
.button:hover .button__text {
  color: #f56308;
  transition: color 500ms ease;
}
.button:hover .button__line {
  animation: link-hover 600ms ease 0s 1 forwards;
  transition: 500ms ease 100ms;
  background-color: #f56308;
}

.button--main .button__text {
  color: black;
}
.button--main .button__line {
  background-color: black;
}

.button--inverted .button__text {
  color: white;
}
.button--inverted .button__line {
  background-color: white;
}

.button__text {
  display: block;
  transition: color 500ms ease;
}

.button__line {
  display: block;
  height: 0.2rem;
  width: 100%;
  margin-top: 0.4rem;
  transition: transform 500ms ease;
}

.button--margin-top {
  margin-top: 4.8rem;
}

.link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: bottom;
}
.link::after {
  background-color: #4e4e53;
  bottom: 3px;
  content: "";
  display: block;
  height: 0.1rem;
  left: 0;
  position: absolute;
  transition: 600ms ease;
  width: 100%;
}
.link:hover::after {
  animation: link-hover 600ms ease 0s 1 forwards;
}

.link--dark {
  color: #CAC9C9;
}
.link--dark::after {
  background-color: #CAC9C9;
}
.link--dark:visited {
  color: #CAC9C9;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/*
 NORMALIZE
 ==========================================================================*/
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
  color: inherit;
  text-decoration: none;
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

a:visited {
  color: inherit;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0;
}

h2, h3, h4, h5, h6, p {
  margin: 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button; /* 2 */
  -moz-appearance: button; /* 2 */
  appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  -moz-appearance: textfield; /* 2 */
  appearance: textfield;
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

* {
  box-sizing: border-box;
}

input, textarea {
  background: none;
}
input:focus, input:active, textarea:focus, textarea:active {
  outline: none;
}
input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:active, input:-webkit-autofill:focus, textarea:-webkit-autofill, textarea:-webkit-autofill:hover, textarea:-webkit-autofill:active, textarea:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px grey inset;
}

section {
  counter-reset: number-counter;
}

ul {
  padding-left: 0;
  list-style: none;
  margin: 0;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 30px #202020 inset !important;
  -webkit-text-fill-color: white !important;
}

input,
textarea {
  padding: 0;
}

/* Colours */
/* Type */
/* Spacing */
/* Breakpoints */
/* Animation Easing */
/* Border */
@keyframes link-hover {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(100%);
  }
  50.01% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes link-hover--inverted {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-100%);
  }
  50.01% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
/* Typography */
html {
  font-size: 62.5%;
}
@media screen and (min-width: 2000px) {
  html {
    font-size: 0.5vw;
  }
}

body {
  font-family: "freight-text-pro", serif;
  font-size: 100%;
}

.type--xl,
.type--l,
.nav-menu__link,
.type--m,
.type--s {
  font-family: "freight-display-pro", serif;
  font-weight: 700;
}

.type--xl {
  font-size: 6rem;
  line-height: 1.1;
}
@media screen and (min-width: 450px) {
  .type--xl {
    font-size: 7.6rem;
  }
}
@media screen and (min-width: 550px) {
  .type--xl {
    font-size: 9.6rem;
    line-height: 1;
  }
}
@media screen and (min-width: 768px) {
  .type--xl {
    font-size: 11.8rem;
  }
}
@media screen and (min-width: 1470px) {
  .type--xl {
    font-size: 14.9rem;
  }
}
@media screen and (min-width: 2000px) {
  .type--xl {
    font-size: 18rem;
  }
}

.type--l, .nav-menu__link {
  font-size: 4.8rem;
  line-height: 1.1;
}
@media screen and (min-width: 550px) {
  .type--l, .nav-menu__link {
    font-size: 6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--l, .nav-menu__link {
    font-size: 7.6rem;
  }
}

.type--m {
  font-size: 3.9rem;
  line-height: 1.3;
}
@media screen and (min-width: 768px) {
  .type--m {
    font-size: 6rem;
    line-height: 1.1;
  }
}

.type--s {
  font-size: 2.5rem;
  line-height: 1.3;
}
@media screen and (min-width: 768px) {
  .type--s {
    font-size: 3.9rem;
    line-height: 1.2;
  }
}

.type--call-out {
  font-family: "freight-display-pro", serif;
  font-weight: 400;
  line-height: 1.3;
  font-size: 2.4rem;
}
@media screen and (min-width: 550px) {
  .type--call-out {
    font-size: 3.9rem;
  }
}
@media screen and (min-width: 1200px) {
  .type--call-out {
    font-size: 6rem;
  }
}

.type--body {
  font-size: 1.6rem;
  line-height: 1.5;
  margin: 0;
}
@media screen and (min-width: 768px) {
  .type--body {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--body {
    font-size: 2rem;
  }
}
.type--body + .type--body {
  margin-top: 2.4rem;
}

.type--alt-xl {
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-size: 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--alt-xl {
    font-size: 2.4rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--alt-xl {
    font-size: 3.2rem;
  }
}

.type--alt-l {
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-size: 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--alt-l {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .type--alt-l {
    font-size: 2rem;
  }
}

.type--alt-s {
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-size: 1.2rem;
}
@media screen and (min-width: 1600px) {
  .type--alt-s {
    font-size: 1.4rem;
  }
}

.type--letter-sp {
  letter-spacing: 1px;
}

.type--l-margin {
  margin: 0 0 4rem;
}
@media screen and (min-width: 550px) {
  .type--l-margin {
    margin: 0 0 5.6rem;
  }
}
@media screen and (min-width: 768px) {
  .type--l-margin {
    margin: 0 0 7.2rem;
  }
}

.type--m-margin {
  margin: 0 0 3.2rem;
}
@media screen and (min-width: 768px) {
  .type--m-margin {
    margin: 0 0 4rem;
  }
}

.type--s-margin {
  margin: 0 0 1.6rem;
}
@media screen and (min-width: 768px) {
  .type--s-margin {
    margin: 0 0 2.4rem;
  }
}

.type--italic {
  font-style: italic;
}

.type--semi-bold {
  font-weight: 600;
}

.type--body-colour {
  color: #464646;
}

.type--grit-colour {
  color: #202020;
}

.type--white {
  color: white;
}

.block, .no-wrap--and-break, .block--full-width {
  display: block;
}

.block--full-width {
  width: 100%;
}

.flex {
  display: flex;
}

.inline-block {
  display: inline-block;
}

.no-margin {
  margin: 0;
}

.no-margin--bottom {
  margin-bottom: 0;
}

.no-margin--top {
  margin-top: 0;
}

.no-wrap, .no-wrap--and-break {
  white-space: nowrap;
}

.no-wrap--and-break {
  line-height: 1;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.no-overflow {
  overflow: hidden;
}

.no-overflow-x {
  overflow-x: hidden;
}

.no-overflow-y {
  overflow-y: hidden;
}

.container {
  margin-right: auto;
  margin-left: auto;
  width: 90%;
}

@media screen and (min-width: 550px) {
  .grid {
    display: grid;
  }
}
@media screen and (min-width: 550px) {
  .grid {
    grid-column-gap: 2.4rem;
    grid-template-columns: repeat(6, 1fr);
  }
}
@media screen and (min-width: 1200px) {
  .grid {
    grid-column-gap: 3.2rem;
    grid-template-columns: repeat(10, 1fr);
  }
}

@media screen and (min-width: 550px) {
  .offset-content {
    grid-column: 3/7;
  }
}
@media screen and (min-width: 1200px) {
  .offset-content {
    grid-column: 6/11;
  }
}

.column, .column--centered {
  grid-column: 1/7;
}

@media screen and (min-width: 1200px) {
  .column--centered {
    grid-column: 2/10;
  }
}
@media screen and (min-width: 1600px) {
  .column--centered {
    grid-column: 3/9;
  }
}

@media screen and (min-width: 768px) {
  .column--half-start {
    grid-column: 1/4;
  }
}
@media screen and (min-width: 1200px) {
  .column--half-start {
    grid-column: 1/6;
  }
}

@media screen and (min-width: 768px) {
  .column--half-end {
    grid-column: 4/7;
  }
}
@media screen and (min-width: 1200px) {
  .column--half-end {
    grid-column: 6/11;
  }
}

.aside {
  grid-column: 3/6;
}
@media screen and (max-width: 767px) {
  .aside {
    display: flex;
    justify-content: space-between;
  }
}
@media screen and (min-width: 768px) {
  .aside {
    grid-column: 1/3;
  }
}

@media screen and (min-width: 768px) {
  .aside__content + .aside__content {
    margin-top: 7.2rem;
  }
}

.section--l {
  margin-bottom: 8rem;
}
@media screen and (min-width: 768px) {
  .section--l {
    margin-bottom: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--l {
    margin-bottom: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .section--l {
    margin-bottom: 22.4rem;
  }
}

.section--l-top {
  margin-top: 8rem;
}
@media screen and (min-width: 768px) {
  .section--l-top {
    margin-top: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--l-top {
    margin-top: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .section--l-top {
    margin-top: 22.4rem;
  }
}

.section--s {
  margin-bottom: 4.8rem;
}
@media screen and (min-width: 550px) {
  .section--s {
    margin-bottom: 6.4rem;
  }
}
@media screen and (min-width: 768px) {
  .section--s {
    margin-bottom: 8rem;
  }
}
@media screen and (min-width: 1200px) {
  .section--s {
    margin-bottom: 10.4rem;
  }
}

.section-xs {
  margin-bottom: 2.4rem;
}
@media screen and (min-width: 550px) {
  .section-xs {
    margin-bottom: 4rem;
  }
}
@media screen and (min-width: 960px) {
  .section-xs {
    margin-bottom: 7.2rem;
  }
}

.button {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-family: "freight-sans-pro", sans-serif;
  font-weight: 600;
  letter-spacing: 1px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  display: inline-block;
  font-family: "freight-sans-pro", sans-serif;
  overflow: hidden;
  padding: 0;
  position: relative;
}
@media screen and (min-width: 768px) {
  .button {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 1600px) {
  .button {
    font-size: 2rem;
  }
}
.button:hover .button__text {
  color: #f56308;
  transition: color 500ms ease;
}
.button:hover .button__line {
  animation: link-hover 600ms ease 0s 1 forwards;
  transition: 500ms ease 100ms;
  background-color: #f56308;
}

.button--main .button__text {
  color: black;
}
.button--main .button__line {
  background-color: black;
}

.button--inverted .button__text {
  color: white;
}
.button--inverted .button__line {
  background-color: white;
}

.button__text {
  display: block;
  transition: color 500ms ease;
}

.button__line {
  display: block;
  height: 0.2rem;
  width: 100%;
  margin-top: 0.4rem;
  transition: transform 500ms ease;
}

.button--margin-top {
  margin-top: 4.8rem;
}

.link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: bottom;
}
.link::after {
  content: "";
  background-color: #4e4e53;
  bottom: 3px;
  display: block;
  height: 0.1rem;
  left: 0;
  position: absolute;
  transition: 600ms ease;
  width: 100%;
}
.link:hover::after {
  animation: link-hover 600ms ease 0s 1 forwards;
}

.link--dark {
  color: #CAC9C9;
}
.link--dark::after {
  background-color: #CAC9C9;
}
.link--dark:visited {
  color: #CAC9C9;
}

.hero__project {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 2.4rem;
  margin-top: 8rem;
}
@media screen and (min-width: 550px) {
  .hero__project {
    grid-column-gap: 2.4rem;
    grid-template-columns: repeat(6, 1fr);
  }
}
@media screen and (min-width: 1200px) {
  .hero__project {
    grid-column-gap: 3.2rem;
    grid-template-columns: repeat(10, 1fr);
  }
}
@media screen and (min-width: 768px) {
  .hero__project {
    margin-top: 10.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .hero__project {
    margin-top: 16rem;
  }
}
@media screen and (min-width: 1600px) {
  .hero__project {
    margin-top: 22.4rem;
  }
}

@media screen and (max-width: 767px) {
  .hero__project-no span,
  .hero__project-title {
    font-size: 5rem;
  }
}

.hero__project-title {
  grid-column: 2/5;
}
@media screen and (min-width: 550px) {
  .hero__project-title {
    grid-column: 3/7;
  }
}
@media screen and (min-width: 1200px) {
  .hero__project-title {
    grid-column: 6/11;
  }
}
@media screen and (max-width: 549px) {
  .hero__project-title {
    text-align: right;
  }
}

.hero__project-no {
  grid-column: 1/2;
}
@media screen and (min-width: 550px) {
  .hero__project-no {
    grid-column: 1/3;
  }
}

.nav-menu {
  width: 100%;
  height: 100%;
  background-color: #202020;
  position: fixed;
  left: 0;
  top: 0;
}

.nav-menu__list {
  margin: 12rem auto 0;
  display: table;
}

.nav-menu__list-item {
  padding: 3.2rem 0;
}

.nav-menu__link {
  display: block;
}
@media screen and (min-width: 960px) {
  .nav-menu__link {
    font-size: 12.8rem;
  }
}

.nav-menu__list:hover > .nav-menu__list-item span:not(:hover) {
  color: red;
}

.nav-bar {
  padding: 1.6rem 0;
}

.nav-bar__meta-one,
.nav-bar__meta-two {
  display: none;
}
@media screen and (min-width: 768px) {
  .nav-bar__meta-one,
  .nav-bar__meta-two {
    display: block;
  }
}

@media screen and (min-width: 768px) {
  .nav-bar__meta-one {
    grid-column: 3/5;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__meta-one {
    grid-column: 4/6;
  }
}

@media screen and (min-width: 768px) {
  .nav-bar__meta-two {
    grid-column: 5/6;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__meta-two {
    grid-column: 6/8;
  }
}

.nav-bar__trigger {
  display: flex;
  align-items: center;
  justify-content: right;
}
@media screen and (min-width: 550px) {
  .nav-bar__trigger {
    grid-column: 6/7;
  }
}
@media screen and (min-width: 1200px) {
  .nav-bar__trigger {
    grid-column: 10/11;
  }
}

.hamburger {
  display: inline-block;
  cursor: pointer;
  width: 2.4rem;
}

.hamburger__line {
  display: block;
  height: 3px;
  background-color: #202020;
}
.hamburger__line + .hamburger__line {
  margin-top: 0.4rem;
}
@media screen and (min-width: 1200px) {
  .hamburger__line + .hamburger__line {
    margin-top: 0.8rem;
  }
}

.hr {
  background-color: black;
  border: none;
  height: 0.2rem;
  margin: 0 0 1.6rem;
}
@media screen and (min-width: 550px) {
  .hr {
    height: 0.4rem;
    margin: 0 0 2.4rem;
  }
}

.meta {
  max-width: 14rem;
}
@media screen and (min-width: 550px) {
  .meta {
    max-width: 19rem;
  }
}

.meta--margin-bottom {
  margin-bottom: 5.6rem;
}
@media screen and (min-width: 768px) {
  .meta--margin-bottom {
    margin-bottom: 7.2rem;
  }
}

.list + .list {
  margin-top: 4.8rem;
}
@media screen and (min-width: 768px) {
  .list + .list {
    margin-top: 7.2rem;
  }
}

.list__item + .list__item {
  margin-top: 0.8rem;
}

@media screen and (min-width: 550px) {
  .services {
    grid-column: 2/6;
  }
}
@media screen and (min-width: 1200px) {
  .services {
    grid-column: 3/9;
  }
}
@media screen and (min-width: 1600px) {
  .services {
    grid-column: 4/9;
  }
}

.services__list {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 1.6rem;
  grid-row-gap: 1.6rem;
}
@media screen and (min-width: 550px) {
  .services__list {
    grid-column-gap: 2.4rem;
    grid-row-gap: 2.4rem;
  }
}

.services__list-item {
  font-family: "freight-display-pro", serif;
  font-weight: 400;
  font-size: 1.6rem;
}
@media screen and (min-width: 550px) {
  .services__list-item {
    font-size: 1.8rem;
  }
}
@media screen and (min-width: 768px) {
  .services__list-item {
    font-size: 2.4rem;
  }
}
@media screen and (min-width: 1200px) {
  .services__list-item {
    font-size: 3.2rem;
  }
}

.belt {
  padding: 4.8rem 0;
  overflow: hidden;
}
@media screen and (min-width: 768px) {
  .belt {
    margin-left: 3.2rem;
    padding: 10.4rem 0;
  }
}

.belt__wrapper {
  display: flex;
  align-items: center;
  transform: rotate(-2deg);
}

.belt__label + .belt__label {
  margin-left: 1.6rem;
}
@media screen and (min-width: 768px) {
  .belt__label + .belt__label {
    margin-left: 3.2rem;
  }
}
@media screen and (min-width: 1600px) {
  .belt__label + .belt__label {
    margin-left: 5.6rem;
  }
}

.belt--label-star {
  height: 17px;
}
@media screen and (min-width: 768px) {
  .belt--label-star {
    height: auto;
  }
}
.belt--label-star svg {
  height: 100%;
  display: block;
}

.home-hero__title {
  position: relative;
  z-index: 2;
}
@media screen and (min-width: 550px) {
  .home-hero__title {
    grid-column: 1/7;
  }
}
@media screen and (min-width: 1200px) {
  .home-hero__title {
    grid-column: 3/9;
  }
}
.home-hero__title h1 {
  max-width: 55rem;
  margin-left: auto;
  margin-right: auto;
}
@media screen and (min-width: 768px) {
  .home-hero__title h1 {
    max-width: 70rem;
  }
}
@media screen and (min-width: 1470px) {
  .home-hero__title h1 {
    max-width: 80rem;
  }
}
@media screen and (min-width: 2000px) {
  .home-hero__title h1 {
    max-width: 100rem;
  }
}

.home-hero__image {
  margin-top: -6.4rem;
  transform: rotate(2deg);
  grid-row-start: 2;
}

.home-hero__image-thumb {
  display: block;
  max-width: 70rem;
  margin-left: auto;
  margin-right: auto;
}

.home-hero__label {
  grid-column: 1/3;
  grid-row: 2;
}

.home-hero__intro {
  grid-column: 9/11;
  grid-row: 2;
  display: flex;
  align-items: center;
}
.home-hero__intro .type--body {
  margin-left: auto;
  margin-right: auto;
  max-width: 30rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7OzRFQUFBO0FBSUM7RUFDRztFQUNBO0VBQ0E7QUNBSjs7QURHRTs7RUFBQTtBQUlBO0VBQ0U7QUNESjs7QURJRTsrRUFBQTtBQUdBOzs7O0VBQUE7QUFNQTs7Ozs7Ozs7Ozs7VUFXVTtFQUNSO0FDSEo7O0FETUU7O0VBQUE7QUFJQTs7OztFQUlFO0FDSko7O0FET0U7O0VBQUE7QUFJQTtFQUNFO0VBQ0E7QUNMSjs7QURRRTs7RUFBQTtBQUlBO0VBQ0U7QUNOSjs7QURTRTs7O0VBQUE7QUFLQTs7RUFFRTtBQ1BKOztBRFVFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBQ1RKOztBRGFFOzs7RUFBQTtBQUtBOztFQUVFO0FDWEo7O0FEY0U7RUFDSTtBQ1hOOztBRGVFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7RUFDRTtFQUNBO0VBQ0E7QUNkSjs7QURpQkU7O0VBQUE7QUFJQTs7RUFFRTtBQ2ZKOztBRGtCRTs7RUFBQTtBQUlBOztFQUVFO0FDaEJKOztBRG1CRTs7RUFBQTtBQUlBO0VBQ0U7QUNqQko7O0FEb0JFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtBQ2xCSjs7QURxQkU7RUFDRTtBQ2xCSjs7QURxQkU7O0VBQUE7QUFJQTtFQUNFO0VBQ0E7QUNuQko7O0FEc0JFOztFQUFBO0FBSUE7RUFDRTtBQ3BCSjs7QUR1QkU7OztFQUFBO0FBS0E7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7QUNyQko7O0FEd0JFO0VBQ0U7QUNyQko7O0FEd0JFO0VBQ0U7QUNyQko7O0FEd0JFOytFQUFBO0FBR0E7O0VBQUE7QUFJQTtFQUNFO0FDdkJKOztBRDBCRTs7RUFBQTtBQUlBO0VBQ0U7QUN4Qko7O0FEMkJFOytFQUFBO0FBR0E7OztFQUFBO0FBS0E7Ozs7RUFJRTtFQUNBO0FDMUJKOztBRDZCRTs7RUFBQTtBQUlBO0VBQ0U7QUMzQko7O0FEOEJFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtFQUNBO0FDNUJKOztBRCtCRTsrRUFBQTtBQUdBOzs7RUFBQTtBQUtBOzs7O0VBSUU7RUFDQTtBQzlCSjs7QURpQ0U7O0VBQUE7QUFJQTtFQUNFO0FDL0JKOztBRGtDRTs7O0VBQUE7QUFLQTtRQUNRO0VBQ047QUNoQ0o7O0FEbUNFOzs7RUFBQTtBQUtBO1NBQ1M7RUFDUDtBQ2pDSjs7QURvQ0U7Ozs7RUFBQTtBQU1BOzs7O0VBSUU7RUFDQTtFQUNBO0FDbENKOztBRHFDRTs7RUFBQTtBQUlBOzs7O0VBSUU7RUFDQTtBQ25DSjs7QURzQ0U7O0VBQUE7QUFJQTs7OztFQUlFO0FDcENKOztBRHVDRTs7RUFBQTtBQUlBO0VBQ0U7RUFDQTtFQUNBO0FDckNKOztBRHdDRTs7Ozs7RUFBQTtBQU9BO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDdENKOztBRHlDRTs7RUFBQTtBQUlBO0VBQ0U7QUN2Q0o7O0FEMENFOzs7RUFBQTtBQUtBOztFQUVFO0VBQ0E7QUN4Q0o7O0FEMkNFOztFQUFBO0FBSUE7O0VBRUU7QUN6Q0o7O0FENENFOzs7RUFBQTtBQUtBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QUMxQ0o7O0FENkNFOztFQUFBO0FBSUE7O0VBRUU7QUMzQ0o7O0FEOENFOztFQUFBO0FBSUE7RUFDRTtFQUNBO0FDNUNKOztBRCtDRTs7O0VBQUE7QUFLQTtFQUNFO0VBQ0E7QUM3Q0o7O0FEaURFO0VBQ0k7QUM5Q047O0FEaURFO0VBQ0U7QUM5Q0o7QURnREk7RUFFRTtBQy9DTjtBRGtESTtFQUVFO0FDakROOztBRHNERTtFQUNFO0FDbkRKOztBRHNERTtFQUNFO0VBQ0E7RUFDQTtBQ25ESjs7QURzREU7Ozs7Ozs7OztFQVNFO0VBQ0E7QUNuREo7O0FEc0RFOztFQUVFO0FDbkRKOztBQzNhQTtBQVVBO0FBVUE7QUFJQTtBQVNBO0FBR0E7QUNwQ0E7RUFDRTtJQUNFO0VGb2JGO0VFamJBO0lBQ0U7RUZtYkY7RUVoYkE7SUFDRTtFRmtiRjtFRS9hQTtJQUNFO0VGaWJGO0FBQ0Y7QUU5YUE7RUFDRTtJQUNFO0VGZ2JGO0VFN2FBO0lBQ0U7RUYrYUY7RUU1YUE7SUFDRTtFRjhhRjtFRTNhQTtJQUNFO0VGNmFGO0FBQ0Y7QUc5Y0E7QUFHQTtFQUNDO0FIOGNEO0FJaGRFO0VEQ0Y7SUFJRTtFSCtjQTtBQUNGOztBRzVjQTtFQUNDLHNDRkNtQjtFRUFuQjtBSCtjRDs7QUc1Y0E7Ozs7O0VBSUMseUNGUnNCO0VFU3RCO0FIZ2REOztBRzdjQTtFQUNDO0VBQ0E7QUhnZEQ7QUl4ZUU7RURzQkY7SUFLRTtFSGlkQTtBQUNGO0FJN2VFO0VEc0JGO0lBU0U7SUFDQTtFSGtkQTtBQUNGO0FJbmZFO0VEc0JGO0lBY0U7RUhtZEE7QUFDRjtBSXhmRTtFRHNCRjtJQWtCRTtFSG9kQTtBQUNGO0FJN2ZFO0VEc0JGO0lBc0JFO0VIcWRBO0FBQ0Y7O0FHbGRBO0VBQ0M7RUFDQTtBSHFkRDtBSXZnQkU7RURnREY7SUFLRTtFSHNkQTtBQUNGO0FJNWdCRTtFRGdERjtJQVNFO0VIdWRBO0FBQ0Y7O0FHcGRBO0VBQ0M7RUFDQTtBSHVkRDtBSXRoQkU7RUQ2REY7SUFLRTtJQUNBO0VId2RBO0FBQ0Y7O0FHcmRBO0VBQ0M7RUFDQTtBSHdkRDtBSWppQkU7RUR1RUY7SUFLRTtJQUNBO0VIeWRBO0FBQ0Y7O0FHdGRBO0VBQ0MseUNGeEVzQjtFRXlFdEIsZ0JGckV1QjtFRXNFdkI7RUFDQTtBSHlkRDtBSTlpQkU7RURpRkY7SUFPRTtFSDBkQTtBQUNGO0FJbmpCRTtFRGlGRjtJQVdFO0VIMmRBO0FBQ0Y7O0FHeGRBO0VFakdDO0VGbUdBLGdCRnpGbUI7RUUwRm5CO0FIMmREO0FJOWpCRTtFRGdHRjtJRTdGRztFTCtqQkQ7QUFDRjtBSW5rQkU7RURnR0Y7SUV2Rkc7RUw4akJEO0FBQ0Y7QUduZUM7RUFDQztBSHFlRjs7QUdqZUE7RUczR0U7RUFHRSwyQ0xVZTtFSWJsQjtBTGtsQkQ7QUlqbEJFO0VEMEdGO0lFdkdHO0VMa2xCRDtBQUNGO0FJdGxCRTtFRDBHRjtJRWpHRztFTGlsQkQ7QUFDRjs7QUc1ZUE7RUdoSEU7RUFHRSwyQ0xVZTtFSWJsQjtBTGttQkQ7QUlqbUJFO0VEK0dGO0lFNUdHO0VMa21CRDtBQUNGO0FJdG1CRTtFRCtHRjtJRXRHRztFTGltQkQ7QUFDRjs7QUd2ZkE7RUdySEU7RUFHRSwyQ0xVZTtFSWJsQjtBTGtuQkQ7QUlqbkJFO0VEb0hGO0lFM0dHO0VMNG1CRDtBQUNGOztBRzdmQTtFQUNDO0FIZ2dCRDs7QUc3ZkE7RUFDQztBSGdnQkQ7QUk5bkJFO0VENkhGO0lBSUU7RUhpZ0JBO0FBQ0Y7QUlub0JFO0VENkhGO0lBUUU7RUhrZ0JBO0FBQ0Y7O0FHL2ZBO0VBQ0M7QUhrZ0JEO0FJNW9CRTtFRHlJRjtJQUlFO0VIbWdCQTtBQUNGOztBR2hnQkE7RUFDQztBSG1nQkQ7QUlycEJFO0VEaUpGO0lBSUU7RUhvZ0JBO0FBQ0Y7O0FHamdCQTtFQUNDO0FIb2dCRDs7QUdqZ0JBO0VBQ0MsZ0JGL0l3QjtBRG1wQnpCOztBR2pnQkE7RUFDQyxjRjdKbUI7QURpcUJwQjs7QUdqZ0JBO0VBQ0MsY0ZyS2M7QUR5cUJmOztBR2pnQkE7RUFDQyxZRnhLZTtBRDRxQmhCOztBT2hyQkE7RUFDRTtBUG1yQkY7O0FPaHJCQTtFQUVFO0FQa3JCRjs7QU8vcUJBO0VBQ0U7QVBrckJGOztBTy9xQkE7RUFDRTtBUGtyQkY7O0FRaHNCQTtFQUNFO0FSbXNCRjs7QVFoc0JBO0VBQ0U7QVJtc0JGOztBUWhzQkE7RUFDRTtBUm1zQkY7O0FTNXNCQTtFQUNFO0FUK3NCRjs7QVM1c0JBO0VBR0U7QVQ2c0JGOztBVXB0QkE7RUFDRTtBVnV0QkY7O0FVcHRCQTtFQUNFO0FWdXRCRjs7QVVwdEJBO0VBQ0U7QVZ1dEJGOztBV2h1QkE7RUFDRTtBWG11QkY7O0FXaHVCQTtFQUNFO0FYbXVCRjs7QVdodUJBO0VBQ0U7QVhtdUJGOztBWTV1QkE7RUNDQztFQUNBO0VBQ0E7QWIrdUJEOztBSWh2QkU7RVVGRjtJQ1NJO0VmOHVCRjtBQUNGO0FJdHZCRTtFVUZGO0lDb0JFO0lBQ0E7RWZ3dUJBO0FBQ0Y7QUk1dkJFO0VVRkY7SUN5QkU7SUFDQTtFZnl1QkE7QUFDRjs7QUlsd0JFO0VZRkY7SUNFRTtFakJ1d0JBO0FBQ0Y7QUl4d0JFO0VZRkY7SUNNRTtFakJ3d0JBO0FBQ0Y7O0FrQi93QkE7RUFDQztBbEJreEJEOztBSWp4QkU7RWNFRjtJQUtFO0VsQit3QkE7QUFDRjtBSXZ4QkU7RWNFRjtJQVNFO0VsQmd4QkE7QUFDRjs7QUk1eEJFO0VjZUY7SUFFRTtFbEJneEJBO0FBQ0Y7QUlseUJFO0VjZUY7SUFNRTtFbEJpeEJBO0FBQ0Y7O0FJdnlCRTtFY3lCRjtJQUVFO0VsQml4QkE7QUFDRjtBSTd5QkU7RWN5QkY7SUFNRTtFbEJreEJBO0FBQ0Y7O0FtQnB6QkE7RUFDRTtBbkJ1ekJGO0FJbHpCRTtFZU5GO0lBSUk7SUFDQTtFbkJ3ekJGO0FBQ0Y7QUk1ekJFO0VlRkY7SUFTSTtFbkJ5ekJGO0FBQ0Y7O0FJajBCRTtFZVlBO0lBRUk7RW5Cd3pCSjtBQUNGOztBb0J6MEJBO0VDQ0M7QXJCNDBCRDtBSTMwQkU7RWdCRkY7SUNJRTtFckI2MEJBO0FBQ0Y7QUloMUJFO0VnQkZGO0lDUUU7RXJCODBCQTtBQUNGO0FJcjFCRTtFZ0JGRjtJQ1lFO0VyQiswQkE7QUFDRjs7QW9CeDFCQTtFQ0hDO0FyQisxQkQ7QUk5MUJFO0VnQkVGO0lDQUU7RXJCZzJCQTtBQUNGO0FJbjJCRTtFZ0JFRjtJQ0lFO0VyQmkyQkE7QUFDRjtBSXgyQkU7RWdCRUY7SUNRRTtFckJrMkJBO0FBQ0Y7O0FvQnYyQkE7RUVQRTtBdEJrM0JGO0FJajNCRTtFZ0JNRjtJRUpJO0V0Qm0zQkY7QUFDRjtBSXQzQkU7RWdCTUY7SUVBSTtFdEJvM0JGO0FBQ0Y7QUkzM0JFO0VnQk1GO0lFSUk7RXRCcTNCRjtBQUNGOztBb0J0M0JBO0VHWEU7QXZCcTRCRjtBSXA0QkU7RWdCVUY7SUdSSTtFdkJzNEJGO0FBQ0Y7QUl6NEJFO0VnQlVGO0lHSkk7RXZCdTRCRjtBQUNGOztBd0JoNUJBO0VuQkNDO0VDQUM7RUFHRSwyQ0xVZTtFS05mLGdCTFNxQjtFS0xyQjtFbUJYRjtFQUNBO0VBQ0E7RUFDQTtFQUNBLDJDeEJTaUI7RXdCUmpCO0VBQ0E7RUFDQTtBekJ3NUJGO0FJOTVCRTtFb0JGRjtJbkJLRztFTCs1QkQ7QUFDRjtBSW42QkU7RW9CRkY7SW5CV0c7RUw4NUJEO0FBQ0Y7QXdCcDZCSTtFQUNFLGN2Qk5ZO0V1Qk9aO0F4QnM2Qk47QXdCbjZCSTtFQUNFO0VBQ0E7RUFDQSx5QnZCYlk7QURrN0JsQjs7QXdCLzVCRTtFQUNFLFl2QmhCWTtBRGs3QmhCO0F3Qi81QkU7RUFDRSx1QnZCcEJZO0FEcTdCaEI7O0F3QjU1QkU7RUFDRSxZdkIzQlk7QUQwN0JoQjtBd0I1NUJFO0VBQ0UsdUJ2Qi9CWTtBRDY3QmhCOztBd0IxNUJBO0VBQ0U7RUFDQTtBeEI2NUJGOztBd0IxNUJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBeEI2NUJGOztBd0IxNUJBO0VBQ0U7QXhCNjVCRjs7QTBCbDlCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0ExQnE5QkY7QTBCbjlCRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBMUJxOUJKO0EwQmo5Qkk7RUFDRTtBMUJtOUJOOztBMEI5OEJBO0VBQ0UsY3pCcEJxQjtBRHErQnZCO0EwQi84QkU7RUFDRSx5QnpCdkJtQjtBRHcrQnZCO0EwQjk4QkU7RUFDRSxjekIzQm1CO0FEMitCdkI7O0EyQmovQkE7RVpHRztFQUNBO0VBQ0E7RU1KRjtBckJ1L0JEO0FJdC9CRTtFdUJGRjtJWm9CRTtJQUNBO0VmdytCQTtBQUNGO0FJNS9CRTtFdUJGRjtJWnlCRTtJQUNBO0VmeStCQTtBQUNGO0FJbGdDRTtFdUJGRjtJTklFO0VyQm9nQ0E7QUFDRjtBSXZnQ0U7RXVCRkY7SU5RRTtFckJxZ0NBO0FBQ0Y7QUk1Z0NFO0V1QkZGO0lOWUU7RXJCc2dDQTtBQUNGOztBSTdnQ0U7RXVCREY7O0lBR0k7RTNCaWhDRjtBQUNGOztBMkI5Z0NBO0VBRUU7QTNCZ2hDRjtBSTVoQ0U7RXVCVUY7SVZWRTtFakJnaUNBO0FBQ0Y7QUlqaUNFO0V1QlVGO0lWTkU7RWpCaWlDQTtBQUNGO0FJbGlDRTtFdUJNRjtJQUtJO0UzQjJoQ0Y7QUFDRjs7QTJCeGhDQTtFQUNFO0EzQjJoQ0Y7QUkvaUNFO0V1Qm1CRjtJQUlJO0UzQjRoQ0Y7QUFDRjs7QTRCdGpDQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBNUJ5akNGOztBNEJ0akNBO0VBQ0U7RUFDQTtBNUJ5akNGOztBNEJ0akNBO0VBQ0U7QTVCeWpDRjs7QTRCdGpDQTtFQUVFO0E1QndqQ0Y7QUkxa0NFO0V3QmdCRjtJQUtFO0U1QnlqQ0E7QUFDRjs7QTRCdGpDQTtFQUNFO0E1QnlqQ0Y7O0E2QnJsQ0E7RUFDRTtBN0J3bENGOztBNkJybENBOztFQUVFO0E3QndsQ0Y7QUk1bENFO0V5QkVGOztJQUtJO0U3QjBsQ0Y7QUFDRjs7QUlsbUNFO0V5QldGO0lBRUk7RTdCMGxDRjtBQUNGO0FJeG1DRTtFeUJXRjtJQU1JO0U3QjJsQ0Y7QUFDRjs7QUk3bUNFO0V5QnFCRjtJQUVJO0U3QjJsQ0Y7QUFDRjtBSW5uQ0U7RXlCcUJGO0lBTUk7RTdCNGxDRjtBQUNGOztBNkJ6bENBO0VBQ0U7RUFDQTtFQUNBO0E3QjRsQ0Y7QUk5bkNFO0V5QitCRjtJQU1JO0U3QjZsQ0Y7QUFDRjtBSW5vQ0U7RXlCK0JGO0lBVUk7RTdCOGxDRjtBQUNGOztBOEIxb0NBO0VBQ0U7RUFDQTtFQUNBO0E5QjZvQ0Y7O0E4QjFvQ0E7RUFDRTtFQUNBO0VBQ0EseUI3Qk5hO0FEbXBDZjtBOEIzb0NFO0VBQ0Usa0I3QlVnQjtBRG1vQ3BCO0FJdnBDRTtFMEJTQTtJQUlJLGtCN0JNUztFRHdvQ2I7QUFDRjs7QStCOXBDQTtFQUNFLHVCOUJJYztFOEJIZDtFQUNBO0VBQ0E7QS9CaXFDRjtBSW5xQ0U7RTJCRkY7SUFPSSxjOUJlZ0I7SThCZGhCO0UvQmtxQ0Y7QUFDRjs7QWdDM3FDQTtFQUNFO0FoQzhxQ0Y7QUk3cUNFO0U0QkZGO0lBSUU7RWhDK3FDQTtBQUNGOztBZ0M1cUNBO0VBQ0U7QWhDK3FDRjtBSXRyQ0U7RTRCTUY7SUFJRTtFaENnckNBO0FBQ0Y7O0FpQzVyQ0U7RUFDRTtBakMrckNKO0FJL3JDRTtFNkJEQTtJQUlJO0VqQ2dzQ0o7QUFDRjs7QWlDM3JDRTtFQUNFO0FqQzhyQ0o7O0FJeHNDRTtFOEJGRjtJQUVJO0VsQzZzQ0Y7QUFDRjtBSTlzQ0U7RThCRkY7SUFNSTtFbEM4c0NGO0FBQ0Y7QUludENFO0U4QkZGO0lBVUk7RWxDK3NDRjtBQUNGOztBa0M1c0NBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QWxDK3NDRjtBSS90Q0U7RThCWUY7SUFPSTtJQUNBO0VsQ2d0Q0Y7QUFDRjs7QWtDN3NDQTtFQUNFLHlDakNmcUI7RWlDZ0JyQixnQmpDWnNCO0VpQ2F0QjtBbENndENGO0FJM3VDRTtFOEJ3QkY7SUFNSTtFbENpdENGO0FBQ0Y7QUlodkNFO0U4QndCRjtJQVVJO0VsQ2t0Q0Y7QUFDRjtBSXJ2Q0U7RThCd0JGO0lBY0k7RWxDbXRDRjtBQUNGOztBbUM1dkNBO0VBQ0U7RUFDQTtBbkMrdkNGO0FJL3ZDRTtFK0JGRjtJQUtJO0lBQ0E7RW5DZ3dDRjtBQUNGOztBbUM3dkNBO0VBQ0U7RUFDQTtFQUNBLHdCbEN5QmU7QUR1dUNqQjs7QW1DNXZDRTtFQUNFO0FuQyt2Q0o7QUkvd0NFO0UrQmVBO0lBSUk7RW5DZ3dDSjtBQUNGO0FJcHhDRTtFK0JlQTtJQVFJO0VuQ2l3Q0o7QUFDRjs7QW1DN3ZDQTtFQUNFO0FuQ2d3Q0Y7QUk3eENFO0UrQjRCRjtJQUlJO0VuQ2l3Q0Y7QUFDRjtBbUMvdkNFO0VBQ0U7RUFDQTtBbkNpd0NKOztBb0N4eUNBO0VBQ0U7RUFDQTtBcEMyeUNGO0FJM3lDRTtFZ0NGRjtJQUtJO0VwQzR5Q0Y7QUFDRjtBSWh6Q0U7RWdDRkY7SUFTSTtFcEM2eUNGO0FBQ0Y7QW9DM3lDRTtFQUNFO0VBQ0E7RUFDQTtBcEM2eUNKO0FJMXpDRTtFZ0NVQTtJQU1JO0VwQzh5Q0o7QUFDRjtBSS96Q0U7RWdDVUE7SUFVSTtFcEMreUNKO0FBQ0Y7QUlwMENFO0VnQ1VBO0lBY0k7RXBDZ3pDSjtBQUNGOztBb0M1eUNBO0VBQ0U7RUFDQTtFQUNBO0FwQyt5Q0Y7O0FvQzV5Q0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBcEMreUNGOztBb0M1eUNBO0VBQ0U7RUFDQTtBcEMreUNGOztBb0M1eUNBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QXBDK3lDRjtBb0M3eUNFO0VBQ0U7RUFDQTtFQUNBO0FwQyt5Q0osQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvYmFzZS9yZXNldC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3NldHRpbmdzL3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvYW5pbWF0aW9ucy9saW5rLWhvdmVyLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9iYXNlL3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9tZWRpYS1xdWVyeS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL3RleHQtc2l6ZS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL2NhcHRpYWxpc2VkLXRleHQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2hlbHBlcnMvZGlzcGxheS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaGVscGVycy9uby1tYXJnaW4uc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2hlbHBlcnMvbm8td3JhcC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaGVscGVycy90ZXh0LWFsaWdubWVudC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvaGVscGVycy9uby1vdmVyZmxvdy5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2NvbnRhaW5lci5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL2NvbnRhaW5lci5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2dyaWQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9ncmlkLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9sYXlvdXQvb2Zmc2V0LWNvbnRlbnQuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9vZmZzZXQtY29udGVudC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvbGF5b3V0L2NvbHVtbnMuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2xheW91dC9hc2lkZS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9zZWN0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy90b29scy9taXhpbnMvc2VjdGlvbi1sYXJnZS5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvdG9vbHMvbWl4aW5zL3NlY3Rpb24tc21hbGwuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9zZWN0aW9uLXhzbWFsbC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9idXR0b24uc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL3Rvb2xzL21peGlucy9idXR0b24uc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvbGluay5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9oZXJvLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL25hdi1tZW51LnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL25hdi1iYXIuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvaGFtYnVyZ2VyLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL2hyLnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9jb21wb25lbnRzL21ldGEuc2NzcyIsIndlYnBhY2s6Ly9sbG95ZC1iZW5uZXR0Ly4vc3R5bGVzL2NvbXBvbmVudHMvbGlzdC5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9zZXJ2aWNlcy5zY3NzIiwid2VicGFjazovL2xsb3lkLWJlbm5ldHQvLi9zdHlsZXMvY29tcG9uZW50cy9iZWx0LnNjc3MiLCJ3ZWJwYWNrOi8vbGxveWQtYmVubmV0dC8uL3N0eWxlcy9wYWdlL2hvbWUuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuIE5PUk1BTElaRVxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuIGh0bWwge1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgKi9cbiAgXG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICBcbiAgLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgKi9cbiAgXG4gIGFydGljbGUsXG4gIGFzaWRlLFxuICBkZXRhaWxzLCAvKiAxICovXG4gIGZpZ2NhcHRpb24sXG4gIGZpZ3VyZSxcbiAgZm9vdGVyLFxuICBoZWFkZXIsXG4gIG1haW4sIC8qIDIgKi9cbiAgbWVudSxcbiAgbmF2LFxuICBzZWN0aW9uLFxuICBzdW1tYXJ5IHsgLyogMSAqL1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIFxuICAvKipcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAqL1xuICBcbiAgYXVkaW8sXG4gIGNhbnZhcyxcbiAgcHJvZ3Jlc3MsXG4gIHZpZGVvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICAgKi9cbiAgXG4gIGF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICAgKi9cbiAgXG4gIHByb2dyZXNzIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgKi9cbiAgXG4gIHRlbXBsYXRlLCAvKiAxICovXG4gIFtoaWRkZW5dIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIFxuICAvKiBMaW5rc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgKi9cbiAgXG4gIGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gICAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICAgIGNvbG9yOmluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICAgKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICovXG4gIFxuICBhOmFjdGl2ZSxcbiAgYTpob3ZlciB7XG4gICAgb3V0bGluZS13aWR0aDogMDtcbiAgfVxuICBcbiAgYTp2aXNpdGVkIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICB9XG4gIFxuICBcbiAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiAgXG4gIC8qKlxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYWJiclt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xuICB9XG4gIFxuICAvKipcbiAgICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gICAqL1xuICBcbiAgYixcbiAgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYixcbiAgc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICB9XG4gIFxuICAvKipcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICAgKi9cbiAgXG4gIGRmbiB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG4gIFxuICAvKipcbiAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgKi9cbiAgXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICBoMixoMyxoNCxoNSxoNixwIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gICAqL1xuICBcbiAgbWFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cbiAgXG4gIHNtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICAgKiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuICBcbiAgc3ViLFxuICBzdXAge1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIH1cbiAgXG4gIHN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xuICB9XG4gIFxuICBzdXAge1xuICAgIHRvcDogLTAuNWVtO1xuICB9XG4gIFxuICAvKiBFbWJlZGRlZCBjb250ZW50XG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gIFxuICAvKipcbiAgICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gICAqL1xuICBcbiAgaW1nIHtcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAgICovXG4gIFxuICBzdmc6bm90KDpyb290KSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICBcbiAgLyogR3JvdXBpbmcgY29udGVudFxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICovXG4gIFxuICBjb2RlLFxuICBrYmQsXG4gIHByZSxcbiAgc2FtcCB7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAgICovXG4gIFxuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMWVtIDQwcHg7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICovXG4gIFxuICBociB7XG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xuICB9XG4gIFxuICAvKiBGb3Jtc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICBcbiAgLyoqXG4gICAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBpbnB1dCxcbiAgc2VsZWN0LFxuICB0ZXh0YXJlYSB7XG4gICAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICAgIG1hcmdpbjogMDsgLyogMiAqL1xuICB9XG4gIFxuICAvKipcbiAgICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gICAqL1xuICBcbiAgb3B0Z3JvdXAge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAvKipcbiAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBpbnB1dCB7IC8qIDEgKi9cbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gICAqL1xuICBcbiAgYnV0dG9uLFxuICBzZWxlY3QgeyAvKiAxICovXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAgICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgKi9cbiAgXG4gIGJ1dHRvbixcbiAgaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuICBbdHlwZT1cInJlc2V0XCJdLFxuICBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgICAtbW96LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICAgIGFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gICAqL1xuICBcbiAgYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuICBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIFxuICAvKipcbiAgICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICAgKi9cbiAgXG4gIGJ1dHRvbjotbW96LWZvY3VzcmluZyxcbiAgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICovXG4gIFxuICBmaWVsZHNldCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICBtYXJnaW46IDAgMnB4O1xuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAgICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICovXG4gIFxuICBsZWdlbmQge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMyAqL1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gICAqL1xuICBcbiAgdGV4dGFyZWEge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG4gIFxuICAvKipcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICAgKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICAgKi9cbiAgXG4gIFt0eXBlPVwiY2hlY2tib3hcIl0sXG4gIFt0eXBlPVwicmFkaW9cIl0ge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gICAqL1xuICBcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG4gIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAgICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gICAqL1xuICBcbiAgW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDIgKi9cbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAgICovXG4gIFxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAgICovXG4gIFxuICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIG9wYWNpdHk6IDAuNTQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICAqL1xuICBcbiAgOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIH1cbiAgXG4gIFxuICAqe1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuICBcbiAgaW5wdXQsIHRleHRhcmVhIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICBcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gIFxuICAgIH1cbiAgICAmOi13ZWJraXQtYXV0b2ZpbGwsICY6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgICAmOi13ZWJraXQtYXV0b2ZpbGw6YWN0aXZlLCAmOi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMge1xuICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAxMDAwcHggZ3JleSBpbnNldDsgLy9jaGFuZ2UgbGF0ZXJcbiAgICB9XG4gIFxuICB9XG4gIFxuICBzZWN0aW9uIHtcbiAgICBjb3VudGVyLXJlc2V0OiBudW1iZXItY291bnRlcjtcbiAgfVxuICBcbiAgdWwge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICBcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCxcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyxcbiAgc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGwsXG4gIHNlbGVjdDotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxuICBzZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbDpmb2N1cyB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAzMHB4ICMyMDIwMjAgaW5zZXQgIWltcG9ydGFudDtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgfVxuICBcbiAgaW5wdXQsXG4gIHRleHRhcmVhIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9IiwiLypcbiBOT1JNQUxJWkVcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbmE6dmlzaXRlZCB7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwO1xufVxuXG5oMiwgaDMsIGg0LCBoNSwgaDYsIHAge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1idXR0b25dLFxuW3R5cGU9cmVzZXRdLFxuW3R5cGU9c3VibWl0XSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIC1tb3otYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPWJ1dHRvbl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9Y2hlY2tib3hdLFxuW3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDIgKi9cbiAgYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaW5wdXQsIHRleHRhcmVhIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbmlucHV0OmZvY3VzLCBpbnB1dDphY3RpdmUsIHRleHRhcmVhOmZvY3VzLCB0ZXh0YXJlYTphY3RpdmUge1xuICBvdXRsaW5lOiBub25lO1xufVxuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbCwgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpob3ZlciwgaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDphY3RpdmUsIGlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMsIHRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGwsIHRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGw6aG92ZXIsIHRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGw6YWN0aXZlLCB0ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsOmZvY3VzIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAxMDAwcHggZ3JleSBpbnNldDtcbn1cblxuc2VjdGlvbiB7XG4gIGNvdW50ZXItcmVzZXQ6IG51bWJlci1jb3VudGVyO1xufVxuXG51bCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbnB1dDotd2Via2l0LWF1dG9maWxsLFxuaW5wdXQ6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbmlucHV0Oi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMsXG50ZXh0YXJlYTotd2Via2l0LWF1dG9maWxsLFxudGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbDpob3ZlcixcbnRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMsXG5zZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbCxcbnNlbGVjdDotd2Via2l0LWF1dG9maWxsOmhvdmVyLFxuc2VsZWN0Oi13ZWJraXQtYXV0b2ZpbGw6Zm9jdXMge1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwIDMwcHggIzIwMjAyMCBpbnNldCAhaW1wb3J0YW50O1xuICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qIENvbG91cnMgKi9cbi8qIFR5cGUgKi9cbi8qIFNwYWNpbmcgKi9cbi8qIEJyZWFrcG9pbnRzICovXG4vKiBBbmltYXRpb24gRWFzaW5nICovXG4vKiBCb3JkZXIgKi9cbkBrZXlmcmFtZXMgbGluay1ob3ZlciB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIH1cbiAgNTAuMDElIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsaW5rLWhvdmVyLS1pbnZlcnRlZCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG4gIDUwLjAxJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxufVxuLyogVHlwb2dyYXBoeSAqL1xuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAyMDAwcHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAwLjV2dztcbiAgfVxufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiZnJlaWdodC10ZXh0LXByb1wiLCBzZXJpZjtcbiAgZm9udC1zaXplOiAxMDAlO1xufVxuXG4udHlwZS0teGwsXG4udHlwZS0tbCxcbi5uYXYtbWVudV9fbGluayxcbi50eXBlLS1tLFxuLnR5cGUtLXMge1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LWRpc3BsYXktcHJvXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4udHlwZS0teGwge1xuICBmb250LXNpemU6IDZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0NTBweCkge1xuICAudHlwZS0teGwge1xuICAgIGZvbnQtc2l6ZTogNy42cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAudHlwZS0teGwge1xuICAgIGZvbnQtc2l6ZTogOS42cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0teGwge1xuICAgIGZvbnQtc2l6ZTogMTEuOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ3MHB4KSB7XG4gIC50eXBlLS14bCB7XG4gICAgZm9udC1zaXplOiAxNC45cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAyMDAwcHgpIHtcbiAgLnR5cGUtLXhsIHtcbiAgICBmb250LXNpemU6IDE4cmVtO1xuICB9XG59XG5cbi50eXBlLS1sLCAubmF2LW1lbnVfX2xpbmsge1xuICBmb250LXNpemU6IDQuOHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC50eXBlLS1sLCAubmF2LW1lbnVfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnR5cGUtLWwsIC5uYXYtbWVudV9fbGluayB7XG4gICAgZm9udC1zaXplOiA3LjZyZW07XG4gIH1cbn1cblxuLnR5cGUtLW0ge1xuICBmb250LXNpemU6IDMuOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS1tIHtcbiAgICBmb250LXNpemU6IDZyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgfVxufVxuXG4udHlwZS0tcyB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnR5cGUtLXMge1xuICAgIGZvbnQtc2l6ZTogMy45cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIH1cbn1cblxuLnR5cGUtLWNhbGwtb3V0IHtcbiAgZm9udC1mYW1pbHk6IFwiZnJlaWdodC1kaXNwbGF5LXByb1wiLCBzZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgZm9udC1zaXplOiAyLjRyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAudHlwZS0tY2FsbC1vdXQge1xuICAgIGZvbnQtc2l6ZTogMy45cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnR5cGUtLWNhbGwtb3V0IHtcbiAgICBmb250LXNpemU6IDZyZW07XG4gIH1cbn1cblxuLnR5cGUtLWJvZHkge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luOiAwO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnR5cGUtLWJvZHkge1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnR5cGUtLWJvZHkge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuLnR5cGUtLWJvZHkgKyAudHlwZS0tYm9keSB7XG4gIG1hcmdpbi10b3A6IDIuNHJlbTtcbn1cblxuLnR5cGUtLWFsdC14bCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBcImZyZWlnaHQtc2Fucy1wcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tYWx0LXhsIHtcbiAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC50eXBlLS1hbHQteGwge1xuICAgIGZvbnQtc2l6ZTogMy4ycmVtO1xuICB9XG59XG5cbi50eXBlLS1hbHQtbCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBcImZyZWlnaHQtc2Fucy1wcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tYWx0LWwge1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnR5cGUtLWFsdC1sIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn1cblxuLnR5cGUtLWFsdC1zIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiZnJlaWdodC1zYW5zLXByb1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAudHlwZS0tYWx0LXMge1xuICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICB9XG59XG5cbi50eXBlLS1sZXR0ZXItc3Age1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuXG4udHlwZS0tbC1tYXJnaW4ge1xuICBtYXJnaW46IDAgMCA0cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLnR5cGUtLWwtbWFyZ2luIHtcbiAgICBtYXJnaW46IDAgMCA1LjZyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS1sLW1hcmdpbiB7XG4gICAgbWFyZ2luOiAwIDAgNy4ycmVtO1xuICB9XG59XG5cbi50eXBlLS1tLW1hcmdpbiB7XG4gIG1hcmdpbjogMCAwIDMuMnJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50eXBlLS1tLW1hcmdpbiB7XG4gICAgbWFyZ2luOiAwIDAgNHJlbTtcbiAgfVxufVxuXG4udHlwZS0tcy1tYXJnaW4ge1xuICBtYXJnaW46IDAgMCAxLjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudHlwZS0tcy1tYXJnaW4ge1xuICAgIG1hcmdpbjogMCAwIDIuNHJlbTtcbiAgfVxufVxuXG4udHlwZS0taXRhbGljIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4udHlwZS0tc2VtaS1ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLnR5cGUtLWJvZHktY29sb3VyIHtcbiAgY29sb3I6ICM0NjQ2NDY7XG59XG5cbi50eXBlLS1ncml0LWNvbG91ciB7XG4gIGNvbG9yOiAjMjAyMDIwO1xufVxuXG4udHlwZS0td2hpdGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5ibG9jaywgLm5vLXdyYXAtLWFuZC1icmVhaywgLmJsb2NrLS1mdWxsLXdpZHRoIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ibG9jay0tZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5pbmxpbmUtYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5uby1tYXJnaW4ge1xuICBtYXJnaW46IDA7XG59XG5cbi5uby1tYXJnaW4tLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5uby1tYXJnaW4tLXRvcCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5uby13cmFwLCAubm8td3JhcC0tYW5kLWJyZWFrIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLm5vLXdyYXAtLWFuZC1icmVhayB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4udGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi50ZXh0LXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi50ZXh0LWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ubm8tb3ZlcmZsb3cge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubm8tb3ZlcmZsb3cteCB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLm5vLW92ZXJmbG93LXkge1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICB3aWR0aDogOTAlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAuZ3JpZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLmdyaWQge1xuICAgIGdyaWQtY29sdW1uLWdhcDogMi40cmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZ3JpZCB7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAzLjJyZW07XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLm9mZnNldC1jb250ZW50IHtcbiAgICBncmlkLWNvbHVtbjogMy83O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLm9mZnNldC1jb250ZW50IHtcbiAgICBncmlkLWNvbHVtbjogNi8xMTtcbiAgfVxufVxuXG4uY29sdW1uLCAuY29sdW1uLS1jZW50ZXJlZCB7XG4gIGdyaWQtY29sdW1uOiAxLzc7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuY29sdW1uLS1jZW50ZXJlZCB7XG4gICAgZ3JpZC1jb2x1bW46IDIvMTA7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAuY29sdW1uLS1jZW50ZXJlZCB7XG4gICAgZ3JpZC1jb2x1bW46IDMvOTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29sdW1uLS1oYWxmLXN0YXJ0IHtcbiAgICBncmlkLWNvbHVtbjogMS80O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvbHVtbi0taGFsZi1zdGFydCB7XG4gICAgZ3JpZC1jb2x1bW46IDEvNjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29sdW1uLS1oYWxmLWVuZCB7XG4gICAgZ3JpZC1jb2x1bW46IDQvNztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5jb2x1bW4tLWhhbGYtZW5kIHtcbiAgICBncmlkLWNvbHVtbjogNi8xMTtcbiAgfVxufVxuXG4uYXNpZGUge1xuICBncmlkLWNvbHVtbjogMy82O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmFzaWRlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmFzaWRlIHtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5hc2lkZV9fY29udGVudCArIC5hc2lkZV9fY29udGVudCB7XG4gICAgbWFyZ2luLXRvcDogNy4ycmVtO1xuICB9XG59XG5cbi5zZWN0aW9uLS1sIHtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zZWN0aW9uLS1sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMC40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb24tLWwge1xuICAgIG1hcmdpbi1ib3R0b206IDE2cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnNlY3Rpb24tLWwge1xuICAgIG1hcmdpbi1ib3R0b206IDIyLjRyZW07XG4gIH1cbn1cblxuLnNlY3Rpb24tLWwtdG9wIHtcbiAgbWFyZ2luLXRvcDogOHJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zZWN0aW9uLS1sLXRvcCB7XG4gICAgbWFyZ2luLXRvcDogMTAuNHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5zZWN0aW9uLS1sLXRvcCB7XG4gICAgbWFyZ2luLXRvcDogMTZyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAuc2VjdGlvbi0tbC10b3Age1xuICAgIG1hcmdpbi10b3A6IDIyLjRyZW07XG4gIH1cbn1cblxuLnNlY3Rpb24tLXMge1xuICBtYXJnaW4tYm90dG9tOiA0LjhyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAuc2VjdGlvbi0tcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNi40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2VjdGlvbi0tcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5zZWN0aW9uLS1zIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMC40cmVtO1xuICB9XG59XG5cbi5zZWN0aW9uLXhzIHtcbiAgbWFyZ2luLWJvdHRvbTogMi40cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLnNlY3Rpb24teHMge1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk2MHB4KSB7XG4gIC5zZWN0aW9uLXhzIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3LjJyZW07XG4gIH1cbn1cblxuLmJ1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LXNhbnMtcHJvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LXNhbnMtcHJvXCIsIHNhbnMtc2VyaWY7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLmJ1dHRvbiB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG59XG4uYnV0dG9uOmhvdmVyIC5idXR0b25fX3RleHQge1xuICBjb2xvcjogI2Y1NjMwODtcbiAgdHJhbnNpdGlvbjogY29sb3IgNTAwbXMgZWFzZTtcbn1cbi5idXR0b246aG92ZXIgLmJ1dHRvbl9fbGluZSB7XG4gIGFuaW1hdGlvbjogbGluay1ob3ZlciA2MDBtcyBlYXNlIDBzIDEgZm9yd2FyZHM7XG4gIHRyYW5zaXRpb246IDUwMG1zIGVhc2UgMTAwbXM7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNTYzMDg7XG59XG5cbi5idXR0b24tLW1haW4gLmJ1dHRvbl9fdGV4dCB7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5idXR0b24tLW1haW4gLmJ1dHRvbl9fbGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uYnV0dG9uLS1pbnZlcnRlZCAuYnV0dG9uX190ZXh0IHtcbiAgY29sb3I6IHdoaXRlO1xufVxuLmJ1dHRvbi0taW52ZXJ0ZWQgLmJ1dHRvbl9fbGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uYnV0dG9uX190ZXh0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IGNvbG9yIDUwMG1zIGVhc2U7XG59XG5cbi5idXR0b25fX2xpbmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwLjJyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiAwLjRyZW07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSA1MDBtcyBlYXNlO1xufVxuXG4uYnV0dG9uLS1tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogNC44cmVtO1xufVxuXG4ubGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuLmxpbms6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlNGU1MztcbiAgYm90dG9tOiAzcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDAuMXJlbTtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0cmFuc2l0aW9uOiA2MDBtcyBlYXNlO1xuICB3aWR0aDogMTAwJTtcbn1cbi5saW5rOmhvdmVyOjphZnRlciB7XG4gIGFuaW1hdGlvbjogbGluay1ob3ZlciA2MDBtcyBlYXNlIDBzIDEgZm9yd2FyZHM7XG59XG5cbi5saW5rLS1kYXJrIHtcbiAgY29sb3I6ICNDQUM5Qzk7XG59XG4ubGluay0tZGFyazo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0FDOUM5O1xufVxuLmxpbmstLWRhcms6dmlzaXRlZCB7XG4gIGNvbG9yOiAjQ0FDOUM5O1xufVxuXG4uaGVyb19fcHJvamVjdCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIGdyaWQtY29sdW1uLWdhcDogMi40cmVtO1xuICBtYXJnaW4tdG9wOiA4cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLmhlcm9fX3Byb2plY3Qge1xuICAgIGdyaWQtY29sdW1uLWdhcDogMi40cmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVyb19fcHJvamVjdCB7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAzLjJyZW07XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0IHtcbiAgICBtYXJnaW4tdG9wOiAxMC40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlcm9fX3Byb2plY3Qge1xuICAgIG1hcmdpbi10b3A6IDE2cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLmhlcm9fX3Byb2plY3Qge1xuICAgIG1hcmdpbi10b3A6IDIyLjRyZW07XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmhlcm9fX3Byb2plY3Qtbm8gc3BhbixcbiAgLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgfVxufVxuXG4uaGVyb19fcHJvamVjdC10aXRsZSB7XG4gIGdyaWQtY29sdW1uOiAyLzU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAuaGVyb19fcHJvamVjdC10aXRsZSB7XG4gICAgZ3JpZC1jb2x1bW46IDMvNztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0LXRpdGxlIHtcbiAgICBncmlkLWNvbHVtbjogNi8xMTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTQ5cHgpIHtcbiAgLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG59XG5cbi5oZXJvX19wcm9qZWN0LW5vIHtcbiAgZ3JpZC1jb2x1bW46IDEvMjtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5oZXJvX19wcm9qZWN0LW5vIHtcbiAgICBncmlkLWNvbHVtbjogMS8zO1xuICB9XG59XG5cbi5uYXYtbWVudSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDIwMjA7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xufVxuXG4ubmF2LW1lbnVfX2xpc3Qge1xuICBtYXJnaW46IDEycmVtIGF1dG8gMDtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi5uYXYtbWVudV9fbGlzdC1pdGVtIHtcbiAgcGFkZGluZzogMy4ycmVtIDA7XG59XG5cbi5uYXYtbWVudV9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgLm5hdi1tZW51X19saW5rIHtcbiAgICBmb250LXNpemU6IDEyLjhyZW07XG4gIH1cbn1cblxuLm5hdi1tZW51X19saXN0OmhvdmVyID4gLm5hdi1tZW51X19saXN0LWl0ZW0gc3Bhbjpub3QoOmhvdmVyKSB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5uYXYtYmFyIHtcbiAgcGFkZGluZzogMS42cmVtIDA7XG59XG5cbi5uYXYtYmFyX19tZXRhLW9uZSxcbi5uYXYtYmFyX19tZXRhLXR3byB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubmF2LWJhcl9fbWV0YS1vbmUsXG4gIC5uYXYtYmFyX19tZXRhLXR3byB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5hdi1iYXJfX21ldGEtb25lIHtcbiAgICBncmlkLWNvbHVtbjogMy81O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLm5hdi1iYXJfX21ldGEtb25lIHtcbiAgICBncmlkLWNvbHVtbjogNC82O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uYXYtYmFyX19tZXRhLXR3byB7XG4gICAgZ3JpZC1jb2x1bW46IDUvNjtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5uYXYtYmFyX19tZXRhLXR3byB7XG4gICAgZ3JpZC1jb2x1bW46IDYvODtcbiAgfVxufVxuXG4ubmF2LWJhcl9fdHJpZ2dlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogcmlnaHQ7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAubmF2LWJhcl9fdHJpZ2dlciB7XG4gICAgZ3JpZC1jb2x1bW46IDYvNztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5uYXYtYmFyX190cmlnZ2VyIHtcbiAgICBncmlkLWNvbHVtbjogMTAvMTE7XG4gIH1cbn1cblxuLmhhbWJ1cmdlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogMi40cmVtO1xufVxuXG4uaGFtYnVyZ2VyX19saW5lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xufVxuLmhhbWJ1cmdlcl9fbGluZSArIC5oYW1idXJnZXJfX2xpbmUge1xuICBtYXJnaW4tdG9wOiAwLjRyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhhbWJ1cmdlcl9fbGluZSArIC5oYW1idXJnZXJfX2xpbmUge1xuICAgIG1hcmdpbi10b3A6IDAuOHJlbTtcbiAgfVxufVxuXG4uaHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDAuMnJlbTtcbiAgbWFyZ2luOiAwIDAgMS42cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLmhyIHtcbiAgICBoZWlnaHQ6IDAuNHJlbTtcbiAgICBtYXJnaW46IDAgMCAyLjRyZW07XG4gIH1cbn1cblxuLm1ldGEge1xuICBtYXgtd2lkdGg6IDE0cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLm1ldGEge1xuICAgIG1heC13aWR0aDogMTlyZW07XG4gIH1cbn1cblxuLm1ldGEtLW1hcmdpbi1ib3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiA1LjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWV0YS0tbWFyZ2luLWJvdHRvbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogNy4ycmVtO1xuICB9XG59XG5cbi5saXN0ICsgLmxpc3Qge1xuICBtYXJnaW4tdG9wOiA0LjhyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubGlzdCArIC5saXN0IHtcbiAgICBtYXJnaW4tdG9wOiA3LjJyZW07XG4gIH1cbn1cblxuLmxpc3RfX2l0ZW0gKyAubGlzdF9faXRlbSB7XG4gIG1hcmdpbi10b3A6IDAuOHJlbTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLnNlcnZpY2VzIHtcbiAgICBncmlkLWNvbHVtbjogMi82O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlcnZpY2VzIHtcbiAgICBncmlkLWNvbHVtbjogMy85O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnNlcnZpY2VzIHtcbiAgICBncmlkLWNvbHVtbjogNC85O1xuICB9XG59XG5cbi5zZXJ2aWNlc19fbGlzdCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtY29sdW1uLWdhcDogMS42cmVtO1xuICBncmlkLXJvdy1nYXA6IDEuNnJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5zZXJ2aWNlc19fbGlzdCB7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAyLjRyZW07XG4gICAgZ3JpZC1yb3ctZ2FwOiAyLjRyZW07XG4gIH1cbn1cblxuLnNlcnZpY2VzX19saXN0LWl0ZW0ge1xuICBmb250LWZhbWlseTogXCJmcmVpZ2h0LWRpc3BsYXktcHJvXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5zZXJ2aWNlc19fbGlzdC1pdGVtIHtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNlcnZpY2VzX19saXN0LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlcnZpY2VzX19saXN0LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMy4ycmVtO1xuICB9XG59XG5cbi5iZWx0IHtcbiAgcGFkZGluZzogNC44cmVtIDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmVsdCB7XG4gICAgbWFyZ2luLWxlZnQ6IDMuMnJlbTtcbiAgICBwYWRkaW5nOiAxMC40cmVtIDA7XG4gIH1cbn1cblxuLmJlbHRfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtMmRlZyk7XG59XG5cbi5iZWx0X19sYWJlbCArIC5iZWx0X19sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiAxLjZyZW07XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmVsdF9fbGFiZWwgKyAuYmVsdF9fbGFiZWwge1xuICAgIG1hcmdpbi1sZWZ0OiAzLjJyZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAuYmVsdF9fbGFiZWwgKyAuYmVsdF9fbGFiZWwge1xuICAgIG1hcmdpbi1sZWZ0OiA1LjZyZW07XG4gIH1cbn1cblxuLmJlbHQtLWxhYmVsLXN0YXIge1xuICBoZWlnaHQ6IDE3cHg7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmVsdC0tbGFiZWwtc3RhciB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG4uYmVsdC0tbGFiZWwtc3RhciBzdmcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaG9tZS1oZXJvX190aXRsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU1MHB4KSB7XG4gIC5ob21lLWhlcm9fX3RpdGxlIHtcbiAgICBncmlkLWNvbHVtbjogMS83O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhvbWUtaGVyb19fdGl0bGUge1xuICAgIGdyaWQtY29sdW1uOiAzLzk7XG4gIH1cbn1cbi5ob21lLWhlcm9fX3RpdGxlIGgxIHtcbiAgbWF4LXdpZHRoOiA1NXJlbTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5ob21lLWhlcm9fX3RpdGxlIGgxIHtcbiAgICBtYXgtd2lkdGg6IDcwcmVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDcwcHgpIHtcbiAgLmhvbWUtaGVyb19fdGl0bGUgaDEge1xuICAgIG1heC13aWR0aDogODByZW07XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIwMDBweCkge1xuICAuaG9tZS1oZXJvX190aXRsZSBoMSB7XG4gICAgbWF4LXdpZHRoOiAxMDByZW07XG4gIH1cbn1cblxuLmhvbWUtaGVyb19faW1hZ2Uge1xuICBtYXJnaW4tdG9wOiAtNi40cmVtO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyZGVnKTtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG59XG5cbi5ob21lLWhlcm9fX2ltYWdlLXRodW1iIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogNzByZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5ob21lLWhlcm9fX2xhYmVsIHtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbiAgZ3JpZC1yb3c6IDI7XG59XG5cbi5ob21lLWhlcm9fX2ludHJvIHtcbiAgZ3JpZC1jb2x1bW46IDkvMTE7XG4gIGdyaWQtcm93OiAyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmhvbWUtaGVyb19faW50cm8gLnR5cGUtLWJvZHkge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDMwcmVtO1xufSIsIi8qIENvbG91cnMgKi9cbiRjb2xvdXItLXBhc3Npb246ICNmNTYzMDg7XG4kY29sb3VyLS1ncmV5OiAjRjJGMkYyO1xuJGNvbG91ci0tZ3JpdDogIzIwMjAyMDtcbiRjb2xvdXItLXdoaXRlOiB3aGl0ZTtcbiRjb2xvdXItLWJsYWNrOiBibGFjaztcbiRjb2xvdXItLXRleHQtb24tZ3JpdDogI0NBQzlDOTtcbiRjb2xvdXItLWJvZHktdHlwZTogIzQ2NDY0NjtcbiRjb2xvdXItLWxpZ2h0LXR5cGU6ICM1MjUyNTI7XG5cbi8qIFR5cGUgKi9cbiR0eXBlLS1saW5lLWhlaWdodDogMS41O1xuJHR5cGUtLWZhbWlseS1kaXNwbGF5OiBcImZyZWlnaHQtZGlzcGxheS1wcm9cIiwgc2VyaWY7XG4kdHlwZS0tZmFtaWx5LWJvZHk6IFwiZnJlaWdodC10ZXh0LXByb1wiLCBzZXJpZjtcbiR0eXBlLS1mYW1pbHktYWx0OiBcImZyZWlnaHQtc2Fucy1wcm9cIiwgc2Fucy1zZXJpZjtcblxuJHR5cGUtLWZvbnQtd2VpZ2h0LXJlZzogNDAwO1xuJHR5cGUtLWZvbnQtd2VpZ2h0LXNlbWk6IDYwMDtcbiR0eXBlLS1mb250LXdlaWdodC1ib2xkOiA3MDA7XG5cbi8qIFNwYWNpbmcgKi9cbiRzcGFjaW5nLXJ1bGU6IDAuOHJlbTtcbiRzcGFjaW5nLXJ1bGUtaGFsZjogJHNwYWNpbmctcnVsZSAvIDI7XG5cbi8qIEJyZWFrcG9pbnRzICovXG4kYnJlYWtwb2ludC0tc21hbGw6IDU1MHB4O1xuJGJyZWFrcG9pbnQtLW1lZGl1bTogNzY4cHg7XG4kYnJlYWtwb2ludC0tbGFyZ2U6IDk2MHB4O1xuJGJyZWFrcG9pbnQtLXgtbGFyZ2U6IDEyMDBweDtcbiRicmVha3BvaW50LS10d2Vha3BvaW50OiAxNDcwcHg7XG4kYnJlYWtwb2ludC0teHgtbGFyZ2U6IDE2MDBweDtcbiRicmVha3BvaW50LS14eHgtbGFyZ2U6IDIwMDBweDtcblxuLyogQW5pbWF0aW9uIEVhc2luZyAqL1xuJGN1YmljLWJlemllci0tem9vbTogY3ViaWMtYmV6aWVyKDAuNDIwLDAuMDAwLDAuMDAyLDEuMDAwKTtcblxuLyogQm9yZGVyICovXG4kYm9yZGVyLXRvcDogMnB4IHNvbGlkICRjb2xvdXItLWdyaXQ7XG4kcm90YXRpb24tYW5nbGU6IHJvdGF0ZSgtMmRlZyk7IiwiQGtleWZyYW1lcyBsaW5rLWhvdmVyIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuXG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICB9XG5cbiAgNTAuMDElIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbGluay1ob3Zlci0taW52ZXJ0ZWQge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG5cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG5cbiAgNTAuMDElIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbn0iLCIvKiBUeXBvZ3JhcGh5ICovXG4kdHlwZS0tdHdlYWtwb2ludDogNDUwcHg7XG5cbmh0bWwge1xuXHRmb250LXNpemU6IDYyLjUlO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14eHgtbGFyZ2UpIHtcblx0XHRmb250LXNpemU6IDAuNTB2dztcblx0fVxufVxuXG5ib2R5IHtcblx0Zm9udC1mYW1pbHk6ICR0eXBlLS1mYW1pbHktYm9keTtcblx0Zm9udC1zaXplOiAxMDAlO1xufVxuXG4udHlwZS0teGwsXG4udHlwZS0tbCxcbi50eXBlLS1tLFxuLnR5cGUtLXMge1xuXHRmb250LWZhbWlseTogJHR5cGUtLWZhbWlseS1kaXNwbGF5O1xuXHRmb250LXdlaWdodDogNzAwO1xufVxuICBcbi50eXBlLS14bCB7XG5cdGZvbnQtc2l6ZTogNnJlbTtcblx0bGluZS1oZWlnaHQ6IDEuMTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkdHlwZS0tdHdlYWtwb2ludCkge1xuXHRcdGZvbnQtc2l6ZTogNy42cmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXNtYWxsKSB7XG5cdFx0Zm9udC1zaXplOiA5LjZyZW07XG5cdFx0bGluZS1oZWlnaHQ6IDE7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0Zm9udC1zaXplOiAxMS44cmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXR3ZWFrcG9pbnQpIHtcblx0XHRmb250LXNpemU6IDE0LjlyZW07XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teHh4LWxhcmdlKSB7XG5cdFx0Zm9udC1zaXplOiAxOHJlbTtcblx0fVxufVxuXG4udHlwZS0tbCB7XG5cdGZvbnQtc2l6ZTogNC44cmVtO1xuXHRsaW5lLWhlaWdodDogMS4xO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdGZvbnQtc2l6ZTogNnJlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRmb250LXNpemU6IDcuNnJlbTtcblx0fVxufVxuICBcbi50eXBlLS1tIHtcblx0Zm9udC1zaXplOiAzLjlyZW07XG5cdGxpbmUtaGVpZ2h0OiAxLjM7XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdGZvbnQtc2l6ZTogNnJlbTtcblx0XHRsaW5lLWhlaWdodDogMS4xO1xuXHR9XG59XG4gXG4udHlwZS0tcyB7XG5cdGZvbnQtc2l6ZTogMi41cmVtO1xuXHRsaW5lLWhlaWdodDogMS4zO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRmb250LXNpemU6IDMuOXJlbTtcblx0XHRsaW5lLWhlaWdodDogMS4yO1xuXHR9XG59XG5cbi50eXBlLS1jYWxsLW91dCB7XG5cdGZvbnQtZmFtaWx5OiAkdHlwZS0tZmFtaWx5LWRpc3BsYXk7XG5cdGZvbnQtd2VpZ2h0OiAkdHlwZS0tZm9udC13ZWlnaHQtcmVnO1xuXHRsaW5lLWhlaWdodDogMS4zO1xuXHRmb250LXNpemU6IDIuNHJlbTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRmb250LXNpemU6IDMuOXJlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG5cdFx0Zm9udC1zaXplOiA2cmVtO1xuXHR9XG59XG5cbi50eXBlLS1ib2R5IHtcblx0QGluY2x1ZGUgdGV4dC1zaXplO1xuXHRsaW5lLWhlaWdodDogJHR5cGUtLWxpbmUtaGVpZ2h0O1xuXHRtYXJnaW46IDA7XG5cblx0JiArICYge1xuXHRcdG1hcmdpbi10b3A6IHNwYWNpbmcoMyk7XG5cdH1cbn1cblxuLnR5cGUtLWFsdC14bCB7XG5cdEBpbmNsdWRlIGNhcGl0YWxpc2VkLXRleHQodHJ1ZSk7XG5cdEBpbmNsdWRlIHRleHQtc2l6ZSgxLjYsIDIuNCwgMy4yKTtcbn1cblxuLnR5cGUtLWFsdC1sIHtcblx0QGluY2x1ZGUgY2FwaXRhbGlzZWQtdGV4dCh0cnVlKTtcblx0QGluY2x1ZGUgdGV4dC1zaXplO1xufVxuXG4udHlwZS0tYWx0LXMge1xuXHRAaW5jbHVkZSBjYXBpdGFsaXNlZC10ZXh0KHRydWUpO1xuXHRAaW5jbHVkZSB0ZXh0LXNpemUoMS4yLCBudWxsLCAxLjQpO1xufVxuXG4udHlwZS0tbGV0dGVyLXNwIHtcblx0bGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cblxuLnR5cGUtLWwtbWFyZ2luIHtcblx0bWFyZ2luOiAwIDAgc3BhY2luZyg1KTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRtYXJnaW46IDAgMCBzcGFjaW5nKDcpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdG1hcmdpbjogMCAwIHNwYWNpbmcoOSk7XG5cdH1cbn1cblxuLnR5cGUtLW0tbWFyZ2luIHtcblx0bWFyZ2luOiAwIDAgc3BhY2luZyg0KTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0bWFyZ2luOiAwIDAgc3BhY2luZyg1KTtcblx0fVxufVxuXG4udHlwZS0tcy1tYXJnaW4ge1xuXHRtYXJnaW46IDAgMCBzcGFjaW5nKDIpO1xuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRtYXJnaW46IDAgMCBzcGFjaW5nKDMpO1xuXHR9XG59XG5cbi50eXBlLS1pdGFsaWMge1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi50eXBlLS1zZW1pLWJvbGQge1xuXHRmb250LXdlaWdodDogJHR5cGUtLWZvbnQtd2VpZ2h0LXNlbWk7XG59XG5cbi50eXBlLS1ib2R5LWNvbG91ciB7XG5cdGNvbG9yOiAkY29sb3VyLS1ib2R5LXR5cGU7XG59XG5cbi50eXBlLS1ncml0LWNvbG91ciB7XG5cdGNvbG9yOiAkY29sb3VyLS1ncml0O1xufVxuXG4udHlwZS0td2hpdGUge1xuXHRjb2xvcjogJGNvbG91ci0td2hpdGU7XG59IiwiQG1peGluIG1lZGlhLXF1ZXJ5KCRkZXZpY2UsICR3aWR0aC10eXBlOiBudWxsKSB7XG5cdEBpZiAkd2lkdGgtdHlwZSA9PSBudWxsIHtcblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGV2aWNlKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBtZWRpYSBzY3JlZW4gYW5kICgjeyR3aWR0aC10eXBlfTogJGRldmljZSkge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59IiwiQG1peGluIHRleHQtc2l6ZSgkc21hbGw6IDEuNiwgJG1lZGl1bTogMS44LCAkbGFyZ2U6IDIpIHtcblx0Zm9udC1zaXplOiAjeyRzbWFsbH1yZW07XG5cblx0QGlmICRtZWRpdW0gIT0gbnVsbCB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuXHRcdFx0Zm9udC1zaXplOiAjeyRtZWRpdW19cmVtO1xuXHRcdH1cblx0fVxuXHRcblx0QGlmICRsYXJnZSAhPSBudWxsIHtcblx0XHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teHgtbGFyZ2UpIHtcblx0XHRcdGZvbnQtc2l6ZTogI3skbGFyZ2V9cmVtO1xuXHRcdH1cblx0fVxufSIsIkBtaXhpbiBjYXBpdGFsaXNlZC10ZXh0KCR0eXBlZmFjZS1hbHQ6IGZhbHNlLCAkYm9sZDogZmFsc2UsICRsZXR0ZXItc3BhY2luZzogZmFsc2UpIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICBAaWYgKCR0eXBlZmFjZS1hbHQgPT0gdHJ1ZSkge1xuICAgIGZvbnQtZmFtaWx5OiAkdHlwZS0tZmFtaWx5LWFsdDtcbiAgfVxuXG4gIEBpZiAoJGJvbGQgPT0gdHJ1ZSkge1xuICAgIGZvbnQtd2VpZ2h0OiAkdHlwZS0tZm9udC13ZWlnaHQtc2VtaTtcbiAgfVxuXG4gIEBpZiAoJGxldHRlci1zcGFjaW5nID09IHRydWUpIHtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4OyAgXG4gIH1cbn0iLCIuYmxvY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmJsb2NrLS1mdWxsLXdpZHRoIHtcbiAgQGV4dGVuZCAuYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5pbmxpbmUtYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59IiwiLm5vLW1hcmdpbiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLm5vLW1hcmdpbi0tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm5vLW1hcmdpbi0tdG9wIHtcbiAgbWFyZ2luLXRvcDogMDtcbn0iLCIubm8td3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi5uby13cmFwLS1hbmQtYnJlYWsge1xuICBAZXh0ZW5kIC5uby13cmFwO1xuICBAZXh0ZW5kIC5ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDE7XG59IiwiLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4udGV4dC1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iLCIubm8tb3ZlcmZsb3cge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubm8tb3ZlcmZsb3cteCB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLm5vLW92ZXJmbG93LXkge1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59IiwiLmNvbnRhaW5lciB7XG4gIEBpbmNsdWRlIGNvbnRhaW5lcjtcbn0iLCJAbWl4aW4gY29udGFpbmVyIHtcblx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xuXHRtYXJnaW4tbGVmdDogYXV0bztcblx0d2lkdGg6IDkwJTtcbn0iLCIuZ3JpZCB7XG4gIEBpbmNsdWRlIGdyaWQ7XG59IiwiQG1peGluIGdyaWQoJGRldmljZTogbnVsbCwgJGZyb21CZWdpbm5pbmc6IGZhbHNlKSB7XG5cdEBpZiAkZGV2aWNlID09IG51bGwge1xuXHRcdEBpZiAkZnJvbUJlZ2lubmluZyA9PSB0cnVlIHtcblx0XHRcdGRpc3BsYXk6IGdyaWQ7XG5cdFx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuXHRcdFx0Z3JpZC1jb2x1bW4tZ2FwOiBzcGFjaW5nKDMpO1xuXHRcdH1cblx0XHRAZWxzZSB7XG5cdFx0XHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRcdFx0ZGlzcGxheTogZ3JpZDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0QGVsc2Uge1xuXHRcdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRkZXZpY2UpIHtcblx0XHRcdGRpc3BsYXk6IGdyaWQ7XG5cdFx0fVxuXHR9XG4gIFxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRncmlkLWNvbHVtbi1nYXA6IHNwYWNpbmcoMyk7XG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG5cdFx0Z3JpZC1jb2x1bW4tZ2FwOiBzcGFjaW5nKDQpO1xuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuXHR9XG59IiwiLm9mZnNldC1jb250ZW50IHtcblx0QGluY2x1ZGUgb2Zmc2V0LWNvbnRlbnQ7XG59IiwiQG1peGluIG9mZnNldC1jb250ZW50KCkge1xuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcblx0XHRncmlkLWNvbHVtbjogMyAvIDc7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuXHRcdGdyaWQtY29sdW1uOiA2IC8gMTE7XG5cdH1cbn0iLCIuY29sdW1uIHtcblx0Z3JpZC1jb2x1bW46IDEgLyA3O1xufVxuXG4uY29sdW1uLS1jZW50ZXJlZCB7XG5cdEBleHRlbmQgLmNvbHVtbjtcblx0XG5cdFxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuXHRcdGdyaWQtY29sdW1uOiAyIC8gMTA7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teHgtbGFyZ2UpIHtcblx0XHRncmlkLWNvbHVtbjogMyAvIDk7XG5cdH1cbn1cblxuLmNvbHVtbi0taGFsZi1zdGFydCB7XG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRncmlkLWNvbHVtbjogMSAvIDQ7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuXHRcdGdyaWQtY29sdW1uOiAxIC8gNjtcblx0fVxufVxuXG4uY29sdW1uLS1oYWxmLWVuZCB7XG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRncmlkLWNvbHVtbjogNCAvIDc7XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuXHRcdGdyaWQtY29sdW1uOiA2IC8gMTE7XG5cdH1cbn0iLCIuYXNpZGUge1xuICBncmlkLWNvbHVtbjogMyAvIDY7XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSAtIDEsIG1heC13aWR0aCkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgIGdyaWQtY29sdW1uOiAxIC8gMztcbiAgfVxufVxuXG4uYXNpZGVfX2NvbnRlbnQge1xuICAmICsgJiB7XG4gICAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgICAgbWFyZ2luLXRvcDogc3BhY2luZyg5KTtcbiAgICB9XG4gIH1cbn0iLCIuc2VjdGlvbi0tbCB7XG4gIEBpbmNsdWRlIHNlY3Rpb24tLWw7XG59XG5cbi5zZWN0aW9uLS1sLXRvcCB7XG4gIEBpbmNsdWRlIHNlY3Rpb24tLWwodG9wKTtcbn1cblxuLnNlY3Rpb24tLXMge1xuICBAaW5jbHVkZSBzZWN0aW9uLS1zO1xufVxuXG4uc2VjdGlvbi14cyB7XG4gIEBpbmNsdWRlIHNlY3Rpb24tLXhzO1xufSIsIkBtaXhpbiBzZWN0aW9uLS1sKCRtYXJnaW4tcG9zOiBib3R0b20pIHtcblx0bWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDEwKTtcblxuXHRAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG5cdFx0bWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDEzKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG5cdFx0bWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDIwKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14eC1sYXJnZSkge1xuXHRcdG1hcmdpbi0jeyRtYXJnaW4tcG9zfTogc3BhY2luZygyOCk7XG5cdH1cbn0iLCJAbWl4aW4gc2VjdGlvbi0tcygkbWFyZ2luLXBvczogYm90dG9tKSB7XG4gIG1hcmdpbi0jeyRtYXJnaW4tcG9zfTogc3BhY2luZyg2KTtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoOCk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG4gICAgbWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDEwKTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG4gICAgbWFyZ2luLSN7JG1hcmdpbi1wb3N9OiBzcGFjaW5nKDEzKTtcbiAgfVxufSIsIkBtaXhpbiBzZWN0aW9uLS14cygkbWFyZ2luLXBvczogYm90dG9tKSB7XG4gIG1hcmdpbi0jeyRtYXJnaW4tcG9zfTogc3BhY2luZygzKTtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoNSk7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbGFyZ2UpIHtcbiAgICBtYXJnaW4tI3skbWFyZ2luLXBvc306IHNwYWNpbmcoOSk7XG4gIH1cbn0iLCIuYnV0dG9uIHtcbiAgQGluY2x1ZGUgdGV4dC1zaXplO1xuICBAaW5jbHVkZSBjYXBpdGFsaXNlZC10ZXh0KHRydWUsIHRydWUsIHRydWUpO1xuICBAaW5jbHVkZSBidXR0b247XG5cbiAgJjpob3ZlciB7XG4gICAgLmJ1dHRvbl9fdGV4dCB7XG4gICAgICBjb2xvcjogJGNvbG91ci0tcGFzc2lvbjtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDUwMG1zIGVhc2U7XG4gICAgfVxuXG4gICAgLmJ1dHRvbl9fbGluZSB7XG4gICAgICBhbmltYXRpb246IGxpbmstaG92ZXIgNjAwbXMgZWFzZSAwcyAxIGZvcndhcmRzO1xuICAgICAgdHJhbnNpdGlvbjogNTAwbXMgZWFzZSAxMDBtcztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLXBhc3Npb247XG4gICAgfVxuICB9XG59XG5cbi5idXR0b24tLW1haW4ge1xuICAuYnV0dG9uX190ZXh0IHtcbiAgICBjb2xvcjogJGNvbG91ci0tYmxhY2s7XG4gIH1cblxuICAuYnV0dG9uX19saW5lIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyLS1ibGFjaztcbiAgfVxufVxuXG4uYnV0dG9uLS1pbnZlcnRlZCB7XG4gIC5idXR0b25fX3RleHQge1xuICAgIGNvbG9yOiAkY29sb3VyLS13aGl0ZTtcbiAgfVxuXG4gIC5idXR0b25fX2xpbmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLXdoaXRlO1xuICB9XG59XG5cbi5idXR0b25fX3RleHQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdHJhbnNpdGlvbjogY29sb3IgNTAwbXMgZWFzZTtcbn1cblxuLmJ1dHRvbl9fbGluZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDAuMnJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IHNwYWNpbmcoMSkgLyAyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXMgZWFzZTtcbn1cblxuLmJ1dHRvbi0tbWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IHNwYWNpbmcoNik7XG59IiwiQG1peGluIGJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LWZhbWlseTogJHR5cGUtLWZhbWlseS1hbHQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn0iLCIubGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0ZTRlNTM7XG4gICAgYm90dG9tOiAzcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAwLjFyZW07XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNpdGlvbjogNjAwbXMgZWFzZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgICY6OmFmdGVyIHtcbiAgICAgIGFuaW1hdGlvbjogbGluay1ob3ZlciA2MDBtcyBlYXNlIDBzIDEgZm9yd2FyZHM7XG4gICAgfVxuICB9XG59XG5cbi5saW5rLS1kYXJrIHtcbiAgY29sb3I6ICRjb2xvdXItLXRleHQtb24tZ3JpdDtcblxuICAmOjphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG91ci0tdGV4dC1vbi1ncml0O1xuICB9XG5cbiAgJjp2aXNpdGVkIHtcbiAgICBjb2xvcjogJGNvbG91ci0tdGV4dC1vbi1ncml0O1xuICB9XG59IiwiLmhlcm9fX3Byb2plY3Qge1xuICBAaW5jbHVkZSBncmlkKG51bGwsIHRydWUpO1xuICBAaW5jbHVkZSBzZWN0aW9uLS1sKHRvcCk7XG59XG5cbi5oZXJvX19wcm9qZWN0LW5vIHNwYW4sXG4uaGVyb19fcHJvamVjdC10aXRsZSB7XG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0gLSAxLCBtYXgtd2lkdGgpIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbn1cblxuLmhlcm9fX3Byb2plY3QtdGl0bGUge1xuICBAaW5jbHVkZSBvZmZzZXQtY29udGVudDtcbiAgZ3JpZC1jb2x1bW46IDIgLyA1O1xuICBcbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXNtYWxsIC0gMSwgbWF4LXdpZHRoKSB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLmhlcm9fX3Byb2plY3Qtbm8ge1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXNtYWxsKSB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAzO1xuICB9XG59IiwiLm5hdi1tZW51IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG91ci0tZ3JpdDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5uYXYtbWVudV9fbGlzdCB7XG4gIG1hcmdpbjogc3BhY2luZygxNSkgYXV0byAwO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cblxuLm5hdi1tZW51X19saXN0LWl0ZW0ge1xuICBwYWRkaW5nOiBzcGFjaW5nKDQpIDA7XG59XG5cbi5uYXYtbWVudV9fbGluayB7XG4gIEBleHRlbmQgLnR5cGUtLWw7XG4gIGRpc3BsYXk6IGJsb2NrO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1sYXJnZSkge1xuXHRcdGZvbnQtc2l6ZTogMTIuOHJlbTtcbiAgfVxufVxuXG4ubmF2LW1lbnVfX2xpc3Q6aG92ZXIgPiAubmF2LW1lbnVfX2xpc3QtaXRlbSBzcGFuOm5vdCg6aG92ZXIpICB7XG4gIGNvbG9yOiByZWQ7XG59IiwiLm5hdi1iYXIge1xuICBwYWRkaW5nOiBzcGFjaW5nKDIpIDA7XG59XG5cbi5uYXYtYmFyX19tZXRhLW9uZSxcbi5uYXYtYmFyX19tZXRhLXR3byB7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi5uYXYtYmFyX19tZXRhLW9uZSB7XG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICBncmlkLWNvbHVtbjogMyAvIDU7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuICAgIGdyaWQtY29sdW1uOiA0IC8gNjtcbiAgfVxufVxuXG4ubmF2LWJhcl9fbWV0YS10d28ge1xuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tbWVkaXVtKSB7XG4gICAgZ3JpZC1jb2x1bW46IDUgLyA2O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcbiAgICBncmlkLWNvbHVtbjogNiAvIDg7XG4gIH1cbn1cblxuLm5hdi1iYXJfX3RyaWdnZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuICAgIGdyaWQtY29sdW1uOiA2IC8gNztcblx0fVxuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG4gICAgZ3JpZC1jb2x1bW46IDEwIC8gMTE7XG4gIH1cbn0iLCIuaGFtYnVyZ2VyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiAyLjRyZW07XG59XG5cbi5oYW1idXJnZXJfX2xpbmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLWdyaXQ7XG5cbiAgJiArICYge1xuICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nLXJ1bGUtaGFsZjtcblxuICAgIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14LWxhcmdlKSB7XG4gICAgICBtYXJnaW4tdG9wOiAkc3BhY2luZy1ydWxlO1xuICAgIH1cbiAgfVxufSIsIi5ociB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvdXItLWJsYWNrO1xuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogJHNwYWNpbmctcnVsZS1oYWxmIC8gMjtcbiAgbWFyZ2luOiAwIDAgc3BhY2luZygyKTtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBoZWlnaHQ6ICRzcGFjaW5nLXJ1bGUtaGFsZjtcbiAgICBtYXJnaW46IDAgMCBzcGFjaW5nKDMpO1xuICB9XG59IiwiLm1ldGEge1xuICBtYXgtd2lkdGg6IDE0cmVtO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuXHRcdG1heC13aWR0aDogMTlyZW07XG5cdH1cbn1cblxuLm1ldGEtLW1hcmdpbi1ib3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiBzcGFjaW5nKDcpO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcblx0XHRtYXJnaW4tYm90dG9tOiBzcGFjaW5nKDkpO1xuXHR9XG59IiwiLmxpc3Qge1xuICAmICsgJiB7XG4gICAgbWFyZ2luLXRvcDogc3BhY2luZyg2KTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICAgIG1hcmdpbi10b3A6IHNwYWNpbmcoOSk7XG4gICAgfVxuICB9XG59XG5cbi5saXN0X19pdGVtIHtcbiAgJiArICYge1xuICAgIG1hcmdpbi10b3A6IHNwYWNpbmcoMSk7XG4gIH1cbn0iLCIuc2VydmljZXMge1xuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBncmlkLWNvbHVtbjogMiAvIDY7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuICAgIGdyaWQtY29sdW1uOiAzIC8gOTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14eC1sYXJnZSkge1xuICAgIGdyaWQtY29sdW1uOiA0IC8gOTtcbiAgfVxufVxuXG4uc2VydmljZXNfX2xpc3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICBncmlkLWNvbHVtbi1nYXA6IHNwYWNpbmcoMik7XG4gIGdyaWQtcm93LWdhcDogc3BhY2luZygyKTtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBncmlkLWNvbHVtbi1nYXA6IHNwYWNpbmcoMyk7XG4gICAgZ3JpZC1yb3ctZ2FwOiBzcGFjaW5nKDMpO1xuICB9XG59XG5cbi5zZXJ2aWNlc19fbGlzdC1pdGVtIHtcbiAgZm9udC1mYW1pbHk6ICR0eXBlLS1mYW1pbHktZGlzcGxheTtcbiAgZm9udC13ZWlnaHQ6ICR0eXBlLS1mb250LXdlaWdodC1yZWc7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1zbWFsbCkge1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXgtbGFyZ2UpIHtcbiAgICBmb250LXNpemU6IDMuMnJlbTtcbiAgfVxufSIsIi5iZWx0IHtcbiAgcGFkZGluZzogc3BhY2luZyg2KSAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICBtYXJnaW4tbGVmdDogc3BhY2luZyg0KTtcbiAgICBwYWRkaW5nOiBzcGFjaW5nKDEzKSAwO1xuICB9XG59XG5cbi5iZWx0X193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNmb3JtOiAkcm90YXRpb24tYW5nbGU7XG59XG5cbi5iZWx0X19sYWJlbCB7XG4gICYgKyAmIHtcbiAgICBtYXJnaW4tbGVmdDogc3BhY2luZygyKTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBzcGFjaW5nKDQpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS14eC1sYXJnZSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IHNwYWNpbmcoNylcbiAgICB9XG4gIH1cbn1cblxuLmJlbHQtLWxhYmVsLXN0YXIge1xuICBoZWlnaHQ6IDE3cHg7XG5cbiAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLW1lZGl1bSkge1xuICAgIGhlaWdodDogYXV0bzsgIFxuICB9XG5cbiAgc3ZnIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn0iLCIuaG9tZS1oZXJvX190aXRsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0tc21hbGwpIHtcbiAgICBncmlkLWNvbHVtbjogMSAvIDc7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1xdWVyeSgkYnJlYWtwb2ludC0teC1sYXJnZSkge1xuICAgIGdyaWQtY29sdW1uOiAzIC8gOTtcbiAgfVxuXG4gIGgxIHtcbiAgICBtYXgtd2lkdGg6IDU1cmVtO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcblxuICAgIEBpbmNsdWRlIG1lZGlhLXF1ZXJ5KCRicmVha3BvaW50LS1tZWRpdW0pIHtcbiAgICAgIG1heC13aWR0aDogNzByZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXR3ZWFrcG9pbnQpIHtcbiAgICAgIG1heC13aWR0aDogODByZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtcXVlcnkoJGJyZWFrcG9pbnQtLXh4eC1sYXJnZSkge1xuICAgICAgbWF4LXdpZHRoOiAxMDByZW07XG4gICAgfVxuICB9XG59XG5cbi5ob21lLWhlcm9fX2ltYWdlIHtcbiAgbWFyZ2luLXRvcDogLSN7c3BhY2luZyg4KX07XG4gIHRyYW5zZm9ybTogcm90YXRlKDJkZWcpO1xuICBncmlkLXJvdy1zdGFydDogMjtcbn1cblxuLmhvbWUtaGVyb19faW1hZ2UtdGh1bWIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiA3MHJlbTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmhvbWUtaGVyb19fbGFiZWwge1xuICBncmlkLWNvbHVtbjogMSAvIDM7XG4gIGdyaWQtcm93OiAyO1xufVxuXG4uaG9tZS1oZXJvX19pbnRybyB7XG4gIGdyaWQtY29sdW1uOiA5IC8gMTE7XG4gIGdyaWQtcm93OiAyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC50eXBlLS1ib2R5IHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAzMHJlbTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==*/